From 9135ced91309af8934b4df397d59a2e0b05e99a9 Mon Sep 17 00:00:00 2001
From: Andriy Danylovskyy <andriy.danylovskyy@streamunlimited.com>
Date: Mon, 8 Jul 2019 16:01:50 +0200
Subject: [PATCH] unconditionally require dbus-1 with recursive mutex

Instead of guessing whether dbus supports recursive mutex, just make
it a requirement, and define DBUS_HAS_RECURSIVE_MUTEX in the API.

This works around the old bug in dbus-c++: DBUS_HAS_RECURSIVE_MUTEX
definition is not propagated into API, and the fall-back code is not
complete. Then any client code trying to use the lib fails to compile,
unless DBUS_HAS_RECURSIVE_MUTEX is explicitly re-defined.

Signed-off-by: Andriy Danylovskyy <andriy.danylovskyy@streamunlimited.com>
---
 CMakeLists.txt                | 3 +++
 include/dbus-c++/dispatcher.h | 2 ++
 2 files changed, 5 insertions(+)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4b2e352..fcdf56c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,5 +1,8 @@
 cmake_minimum_required(VERSION 2.8.12)
 
+find_package(PkgConfig)
+pkg_check_modules(DBUSCPP REQUIRED dbus-1>=0.93)
+
 set(dbus-c++_SOURCES
 	src/connection.cpp
 	src/debug.cpp
diff --git a/include/dbus-c++/dispatcher.h b/include/dbus-c++/dispatcher.h
index 8b8ae70..a871f7f 100755
--- a/include/dbus-c++/dispatcher.h
+++ b/include/dbus-c++/dispatcher.h
@@ -29,6 +29,8 @@
 #include "connection.h"
 #include "eventloop.h"
 
+#define DBUS_HAS_RECURSIVE_MUTEX
+
 namespace DBus
 {
 
-- 
2.7.4

