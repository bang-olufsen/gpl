From b0654d850c5a848783a99558351a0b1493746fe9 Mon Sep 17 00:00:00 2001
From: Stanislav Ruzani <stanislav.ruzani@streamunlimited.com>
Date: Thu, 15 Jun 2017 11:51:28 +0200
Subject: [PATCH 09/11] googlecast: fixed compilation of DBus::Struct in
 libdbus-c++ under clang

Signed-off-by: Stanislav Ruzani <stanislav.ruzani@streamunlimited.com>
---
 include/dbus-c++/types.h  | 116 ++++++++++++++-------
 1 file changed, 78 insertions(+), 38 deletions(-)

diff --git a/include/dbus-c++/types.h b/include/dbus-c++/types.h
index 6324b9e..15c414e 100755
--- a/include/dbus-c++/types.h
+++ b/include/dbus-c++/types.h
@@ -42,6 +42,45 @@ class	DXXAPI Variant;
 struct	DXXAPI Invalid;
 struct	DXXAPI Signature;
 struct  DXXAPI UnixFD;
+
+template <
+typename T1,
+		 typename T2 = Invalid,
+		 typename T3 = Invalid,
+		 typename T4 = Invalid,
+		 typename T5 = Invalid,
+		 typename T6 = Invalid,
+		 typename T7 = Invalid,
+		 typename T8 = Invalid,
+		 typename T9 = Invalid,
+		 typename T10 = Invalid,
+		 typename T11 = Invalid,
+		 typename T12 = Invalid,
+		 typename T13 = Invalid,
+		 typename T14 = Invalid,
+		 typename T15 = Invalid,
+		 typename T16 = Invalid // nobody needs more than 16
+		 >
+struct Struct
+{
+  T1 _1;
+  T2 _2;
+  T3 _3;
+  T4 _4;
+  T5 _5;
+  T6 _6;
+  T7 _7;
+  T8 _8;
+  T9 _9;
+  T10 _10;
+  T11 _11;
+  T12 _12;
+  T13 _13;
+  T14 _14;
+  T15 _15;
+  T16 _16;
+};
+
 }
 
 inline DBus::MessageIter &operator >> (DBus::MessageIter &iter, DBus::Invalid &);
@@ -66,6 +105,25 @@ extern DBus::MessageIter &operator >> (DBus::MessageIter &iter, std::vector<E>&
 template<typename K, typename V>
 inline DBus::MessageIter &operator >> (DBus::MessageIter &iter, std::map<K, V>& val);
 
+template <
+typename T1,
+		 typename T2,
+		 typename T3,
+		 typename T4,
+		 typename T5,
+		 typename T6,
+		 typename T7,
+		 typename T8,
+		 typename T9,
+		 typename T10,
+		 typename T11,
+		 typename T12,
+		 typename T13,
+		 typename T14,
+		 typename T15,
+		 typename T16
+		 >
+inline DBus::MessageIter &operator >> (DBus::MessageIter &iter, DBus::Struct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>& val);
 
 extern DBus::MessageIter &operator << (DBus::MessageIter &iter, const DBus::Invalid &);
 extern DBus::MessageIter &operator << (DBus::MessageIter &iter, const uint8_t &val);
@@ -89,6 +147,26 @@ extern DBus::MessageIter &operator << (DBus::MessageIter &iter, const std::vecto
 template<typename K, typename V>
 extern DBus::MessageIter &operator << (DBus::MessageIter &iter, const std::map<K, V>& val);
 
+template <
+typename T1,
+		 typename T2,
+		 typename T3,
+		 typename T4,
+		 typename T5,
+		 typename T6,
+		 typename T7,
+		 typename T8,
+		 typename T9,
+		 typename T10,
+		 typename T11,
+		 typename T12,
+		 typename T13,
+		 typename T14,
+		 typename T15,
+		 typename T16
+		 >
+inline DBus::MessageIter &operator << (DBus::MessageIter &iter, const DBus::Struct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>& val);
+
 namespace DBus
 {
 
@@ -171,44 +249,6 @@ private:
   Message _msg;
 };
 
-template <
-typename T1,
-         typename T2 = Invalid,
-         typename T3 = Invalid,
-         typename T4 = Invalid,
-         typename T5 = Invalid,
-         typename T6 = Invalid,
-         typename T7 = Invalid,
-         typename T8 = Invalid,
-         typename T9 = Invalid,
-         typename T10 = Invalid,
-         typename T11 = Invalid,
-         typename T12 = Invalid,
-         typename T13 = Invalid,
-         typename T14 = Invalid,
-         typename T15 = Invalid,
-         typename T16 = Invalid // nobody needs more than 16
-         >
-struct Struct
-{
-  T1 _1;
-  T2 _2;
-  T3 _3;
-  T4 _4;
-  T5 _5;
-  T6 _6;
-  T7 _7;
-  T8 _8;
-  T9 _9;
-  T10 _10;
-  T11 _11;
-  T12 _12;
-  T13 _13;
-  T14 _14;
-  T15 _15;
-  T16 _16;
-};
-
 template<typename K, typename V>
 inline bool dict_has_key(const std::map<K, V>& map, const K &key)
 {
-- 
2.7.4

