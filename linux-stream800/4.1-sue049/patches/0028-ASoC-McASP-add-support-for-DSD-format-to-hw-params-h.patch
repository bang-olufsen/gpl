From d2498a3e5aa15fe0534889e4df0ef3811b3bcd55 Mon Sep 17 00:00:00 2001
From: Marek Belisko <marek.belisko@streamunlimited.com>
Date: Tue, 11 Aug 2015 12:44:23 +0200
Subject: [PATCH] ASoC: McASP: add support for DSD format to hw params handlers

Signed-off-by: Miroslav Rudisin <miero@seznam.cz>
Signed-off-by: Lee Page <lee.page@streamunlimited.com>
[change u8 to bool to keep consistent]
Signed-off-by: Radek Dostal <radek.dostal@streamunlimited.com>

ASoC: davinci-macsp: Fix compilation error

type dma_params was remove by commit: 9759e7ef53138c5ab46ea516ad08977eb5770393
thus remove also reference from our changes.

Signed-off-by: Marek Belisko <marek.belisko@streamunlimited.com>
---
 sound/soc/davinci/davinci-mcasp.c | 31 ++++++++++++++++++++++++-------
 1 file changed, 24 insertions(+), 7 deletions(-)

diff --git a/sound/soc/davinci/davinci-mcasp.c b/sound/soc/davinci/davinci-mcasp.c
index 255c49b..3ef68ac 100644
--- a/sound/soc/davinci/davinci-mcasp.c
+++ b/sound/soc/davinci/davinci-mcasp.c
@@ -774,13 +774,13 @@ static int davinci_config_channel_size(struct davinci_mcasp *mcasp,
 }
 
 static int mcasp_common_hw_param(struct davinci_mcasp *mcasp, int stream,
-				 int period_words, int channels)
+				 int period_words, int channels, bool dsd_mode)
 {
 	struct snd_dmaengine_dai_dma_data *dma_data = &mcasp->dma_data[stream];
 	int i;
 	u8 tx_ser = 0;
 	u8 rx_ser = 0;
-	u8 slots = mcasp->tdm_slots;
+	u8 slots = dsd_mode ? 1 : mcasp->tdm_slots;
 	u8 max_active_serializers = (channels + slots - 1) / slots;
 	int active_serializers, numevt, n;
 	u32 reg;
@@ -882,13 +882,14 @@ static int mcasp_common_hw_param(struct davinci_mcasp *mcasp, int stream,
 }
 
 static int mcasp_i2s_hw_param(struct davinci_mcasp *mcasp, int stream,
-			      int channels)
+			      int channels, bool dsd_mode)
 {
 	int i, active_slots;
 	int total_slots;
 	int active_serializers;
 	u32 mask = 0;
 	u32 busel = 0;
+	u32 mod;
 
 	total_slots = mcasp->tdm_slots;
 
@@ -916,15 +917,23 @@ static int mcasp_i2s_hw_param(struct davinci_mcasp *mcasp, int stream,
 	if (!mcasp->dat_port)
 		busel = TXSEL;
 
+	if (dsd_mode) {
+		mask = 1;
+		busel = 0;
+		mod = 0;
+	} else {
+		mod = total_slots;
+	}
+
 	mcasp_set_reg(mcasp, DAVINCI_MCASP_TXTDM_REG, mask);
 	mcasp_set_bits(mcasp, DAVINCI_MCASP_TXFMT_REG, busel | TXORD);
 	mcasp_mod_bits(mcasp, DAVINCI_MCASP_TXFMCTL_REG,
-		       FSXMOD(total_slots), FSXMOD(0x1FF));
+		       FSXMOD(mod), FSXMOD(0x1FF));
 
 	mcasp_set_reg(mcasp, DAVINCI_MCASP_RXTDM_REG, mask);
 	mcasp_set_bits(mcasp, DAVINCI_MCASP_RXFMT_REG, busel | RXORD);
 	mcasp_mod_bits(mcasp, DAVINCI_MCASP_RXFMCTL_REG,
-		       FSRMOD(total_slots), FSRMOD(0x1FF));
+		       FSRMOD(mod), FSRMOD(0x1FF));
 
 	/* Disable the DIT */
 	mcasp_clr_bits(mcasp, DAVINCI_MCASP_TXDITCTL_REG, DITEN);
@@ -1033,10 +1042,14 @@ static int davinci_mcasp_hw_params(struct snd_pcm_substream *substream,
 	struct davinci_mcasp *mcasp = snd_soc_dai_get_drvdata(cpu_dai);
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
 	int word_length;
+	bool dsd_mode = params_format(params) == SNDRV_PCM_FORMAT_DSD_U8;
 	int channels = params_channels(params);
 	int period_size = params_period_size(params);
 	int ret;
 
+	if (dsd_mode && mcasp->op_mode == DAVINCI_MCASP_DIT_MODE)
+		return -EINVAL;
+
 	/*
 	 * If mcasp is BCLK master, and a BCLK divider was not provided by
 	 * the machine driver, we need to calculate the ratio.
@@ -1060,7 +1073,7 @@ static int davinci_mcasp_hw_params(struct snd_pcm_substream *substream,
 	}
 
 	ret = mcasp_common_hw_param(mcasp, substream->stream,
-				    period_size * channels, channels);
+				    period_size * channels, channels, dsd_mode);
 	if (ret)
 		return ret;
 
@@ -1068,7 +1081,7 @@ static int davinci_mcasp_hw_params(struct snd_pcm_substream *substream,
 		ret = mcasp_dit_hw_param(mcasp, params_rate(params));
 	else
 		ret = mcasp_i2s_hw_param(mcasp, substream->stream,
-					 channels);
+					 channels, dsd_mode);
 
 	if (ret)
 		return ret;
@@ -1101,6 +1114,10 @@ static int davinci_mcasp_hw_params(struct snd_pcm_substream *substream,
 		word_length = 32;
 		break;
 
+	case SNDRV_PCM_FORMAT_DSD_U8:
+		word_length = 8;
+		break;
+
 	default:
 		printk(KERN_WARNING "davinci-mcasp: unsupported PCM format");
 		return -EINVAL;
-- 
1.9.1

