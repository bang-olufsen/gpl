From bee1c25befee73853c6fa47d974a48b943ba7042 Mon Sep 17 00:00:00 2001
From: Simon Mikuda <simon.mikuda@streamunlimited.com>
Date: Thu, 24 Aug 2017 16:35:34 +0200
Subject: [PATCH] bluetooth: Add scan window and interval to debugfs

Signed-off-by: Simon Mikuda <simon.mikuda@streamunlimited.com>
---
 net/bluetooth/hci_debugfs.c | 60 +++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 60 insertions(+)

diff --git a/net/bluetooth/hci_debugfs.c b/net/bluetooth/hci_debugfs.c
index 7db4220..3edab44 100644
--- a/net/bluetooth/hci_debugfs.c
+++ b/net/bluetooth/hci_debugfs.c
@@ -903,6 +903,62 @@ static int conn_min_interval_get(void *data, u64 *val)
 DEFINE_SIMPLE_ATTRIBUTE(conn_min_interval_fops, conn_min_interval_get,
 			conn_min_interval_set, "%llu\n");
 
+static int scan_interval_set(void *data, u64 val)
+{
+	struct hci_dev *hdev = data;
+
+	if (val < 0x0006 || val > 0x0c80 || val < hdev->le_scan_interval)
+		return -EINVAL;
+
+	hci_dev_lock(hdev);
+	hdev->le_scan_interval = val;
+	hci_dev_unlock(hdev);
+
+	return 0;
+}
+
+static int scan_interval_get(void *data, u64 *val)
+{
+	struct hci_dev *hdev = data;
+
+	hci_dev_lock(hdev);
+	*val = hdev->le_scan_interval;
+	hci_dev_unlock(hdev);
+
+	return 0;
+}
+
+DEFINE_SIMPLE_ATTRIBUTE(scan_interval_fops, scan_interval_get,
+			scan_interval_set, "%llu\n");
+
+static int scan_window_set(void *data, u64 val)
+{
+	struct hci_dev *hdev = data;
+
+	if (val < 0x0006 || val > 0x0c80 || val < hdev->le_scan_window)
+		return -EINVAL;
+
+	hci_dev_lock(hdev);
+	hdev->le_scan_window = val;
+	hci_dev_unlock(hdev);
+
+	return 0;
+}
+
+static int scan_window_get(void *data, u64 *val)
+{
+	struct hci_dev *hdev = data;
+
+	hci_dev_lock(hdev);
+	*val = hdev->le_scan_window;
+	hci_dev_unlock(hdev);
+
+	return 0;
+}
+
+DEFINE_SIMPLE_ATTRIBUTE(scan_window_fops, scan_window_get,
+			scan_window_set, "%llu\n");
+
 static int conn_max_interval_set(void *data, u64 val)
 {
 	struct hci_dev *hdev = data;
@@ -1120,6 +1176,10 @@ void hci_debugfs_create_le(struct hci_dev *hdev)
 			    &adv_max_interval_fops);
 	debugfs_create_u16("discov_interleaved_timeout", 0644, hdev->debugfs,
 			   &hdev->discov_interleaved_timeout);
+	debugfs_create_file("scan_interval", 0644, hdev->debugfs, hdev,
+			    &scan_interval_fops);
+	debugfs_create_file("scan_window", 0644, hdev->debugfs, hdev,
+			    &scan_window_fops);
 
 	debugfs_create_file("quirk_strict_duplicate_filter", 0644,
 			    hdev->debugfs, hdev,
-- 
2.7.4

