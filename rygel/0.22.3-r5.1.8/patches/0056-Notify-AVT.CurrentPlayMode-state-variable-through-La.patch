From d6681307c51d2c7bcde0c994f290c1cf45c9ff2e Mon Sep 17 00:00:00 2001
From: Simon Mikuda <simon.mikuda@streamunlimited.com>
Date: Fri, 26 Jul 2019 09:29:14 +0200
Subject: [PATCH] Notify AVT.CurrentPlayMode state variable through LastChange
 evetns

Signed-off-by: Simon Mikuda <simon.mikuda@streamunlimited.com>
---
 src/librygel-renderer/rygel-av-transport.c    | 54 ++++++++++++++++++++-------
 src/librygel-renderer/rygel-av-transport.vala |  6 +++
 2 files changed, 46 insertions(+), 14 deletions(-)

diff --git a/src/librygel-renderer/rygel-av-transport.c b/src/librygel-renderer/rygel-av-transport.c
index 24252dc..93110af 100644
--- a/src/librygel-renderer/rygel-av-transport.c
+++ b/src/librygel-renderer/rygel-av-transport.c
@@ -368,6 +368,8 @@ static void rygel_av_transport_notify_next_uri_cb (RygelAVTransport* self, GObje
 static void _rygel_av_transport_notify_next_uri_cb_g_object_notify (GObject* _sender, GParamSpec* pspec, gpointer self);
 static void rygel_av_transport_notify_next_meta_data_cb (RygelAVTransport* self, GObject* player, GParamSpec* p);
 static void _rygel_av_transport_notify_next_meta_data_cb_g_object_notify (GObject* _sender, GParamSpec* pspec, gpointer self);
+static void rygel_av_transport_notify_play_mode_cb (RygelAVTransport* self, GObject* player, GParamSpec* p);
+static void _rygel_av_transport_notify_play_mode_cb_g_object_notify (GObject* _sender, GParamSpec* pspec, gpointer self);
 static void rygel_av_transport_notify_duration_cb (RygelAVTransport* self, GObject* player, GParamSpec* p);
 static void _rygel_av_transport_notify_duration_cb_g_object_notify (GObject* _sender, GParamSpec* pspec, gpointer self);
 gchar* rygel_media_renderer_plugin_get_protocol_info (RygelMediaRendererPlugin* self);
@@ -595,6 +597,11 @@ static void _rygel_av_transport_notify_next_meta_data_cb_g_object_notify (GObjec
 }
 
 
+static void _rygel_av_transport_notify_play_mode_cb_g_object_notify (GObject* _sender, GParamSpec* pspec, gpointer self) {
+	rygel_av_transport_notify_play_mode_cb ((RygelAVTransport*) self, _sender, pspec);
+}
+
+
 static void _rygel_av_transport_notify_duration_cb_g_object_notify (GObject* _sender, GParamSpec* pspec, gpointer self) {
 	rygel_av_transport_notify_duration_cb ((RygelAVTransport*) self, _sender, pspec);
 }
@@ -622,9 +629,10 @@ static void rygel_av_transport_real_constructed (GObject* base) {
 	RygelPlayerControllerInterface* _tmp16_ = NULL;
 	RygelPlayerControllerInterface* _tmp17_ = NULL;
 	RygelPlayerControllerInterface* _tmp18_ = NULL;
-	RygelMediaPlayer* _tmp19_ = NULL;
-	SoupSession* _tmp20_ = NULL;
-	gchar* _tmp21_ = NULL;
+	RygelPlayerControllerInterface* _tmp19_ = NULL;
+	RygelMediaPlayer* _tmp20_ = NULL;
+	SoupSession* _tmp21_ = NULL;
+	gchar* _tmp22_ = NULL;
 	self = (RygelAVTransport*) base;
 	G_OBJECT_CLASS (rygel_av_transport_parent_class)->constructed ((GObject*) G_TYPE_CHECK_INSTANCE_CAST (self, gupnp_service_get_type (), GUPnPService));
 	g_object_get ((GUPnPService*) self, "root-device", &_tmp0_, NULL);
@@ -681,14 +689,16 @@ static void rygel_av_transport_real_constructed (GObject* base) {
 	g_signal_connect_object ((GObject*) _tmp17_, "notify::next-uri", (GCallback) _rygel_av_transport_notify_next_uri_cb_g_object_notify, self, 0);
 	_tmp18_ = self->priv->controller;
 	g_signal_connect_object ((GObject*) _tmp18_, "notify::next-metadata", (GCallback) _rygel_av_transport_notify_next_meta_data_cb_g_object_notify, self, 0);
-	_tmp19_ = self->priv->player;
-	g_signal_connect_object ((GObject*) _tmp19_, "notify::duration", (GCallback) _rygel_av_transport_notify_duration_cb_g_object_notify, self, 0);
-	_tmp20_ = soup_session_new ();
+	_tmp19_ = self->priv->controller;
+	g_signal_connect_object ((GObject*) _tmp19_, "notify::play-mode", (GCallback) _rygel_av_transport_notify_play_mode_cb_g_object_notify, self, 0);
+	_tmp20_ = self->priv->player;
+	g_signal_connect_object ((GObject*) _tmp20_, "notify::duration", (GCallback) _rygel_av_transport_notify_duration_cb_g_object_notify, self, 0);
+	_tmp21_ = soup_session_new ();
 	_g_object_unref0 (self->priv->session);
-	self->priv->session = _tmp20_;
-	_tmp21_ = rygel_media_renderer_plugin_get_protocol_info (plugin);
+	self->priv->session = _tmp21_;
+	_tmp22_ = rygel_media_renderer_plugin_get_protocol_info (plugin);
 	_g_free0 (self->priv->protocol_info);
-	self->priv->protocol_info = _tmp21_;
+	self->priv->protocol_info = _tmp22_;
 	_g_object_unref0 (plugin);
 }
 
@@ -1745,7 +1755,7 @@ static void rygel_av_transport_seek_cb (RygelAVTransport* self, GUPnPService* se
 				_tmp8_ = rygel_time_utils_time_from_string (_tmp7_);
 				seek_target = _tmp8_;
 				_tmp9_ = seek_target;
-				g_debug ("rygel-av-transport.vala:519: Seeking to %lld sec", _tmp9_ / G_TIME_SPAN_SECOND);
+				g_debug ("rygel-av-transport.vala:520: Seeking to %lld sec", _tmp9_ / G_TIME_SPAN_SECOND);
 				_tmp10_ = self->priv->player;
 				_tmp11_ = rygel_media_player_get_can_seek (_tmp10_);
 				_tmp12_ = _tmp11_;
@@ -1811,7 +1821,7 @@ static void rygel_av_transport_seek_cb (RygelAVTransport* self, GUPnPService* se
 					seek_target = _tmp24_ + _tmp27_;
 				}
 				_tmp28_ = seek_target;
-				g_debug ("rygel-av-transport.vala:544: Seeking to %lld bytes.", _tmp28_);
+				g_debug ("rygel-av-transport.vala:545: Seeking to %lld bytes.", _tmp28_);
 				_tmp29_ = self->priv->player;
 				_tmp30_ = rygel_media_player_get_can_seek_bytes (_tmp29_);
 				_tmp31_ = _tmp30_;
@@ -1859,7 +1869,7 @@ static void rygel_av_transport_seek_cb (RygelAVTransport* self, GUPnPService* se
 				gint _tmp52_ = 0;
 				GUPnPServiceAction* _tmp53_ = NULL;
 				_tmp40_ = target;
-				g_debug ("rygel-av-transport.vala:562: Setting track to %s.", _tmp40_);
+				g_debug ("rygel-av-transport.vala:563: Setting track to %s.", _tmp40_);
 				_tmp41_ = target;
 				_tmp42_ = atoi (_tmp41_);
 				track = _tmp42_;
@@ -2239,6 +2249,22 @@ static void rygel_av_transport_notify_next_meta_data_cb (RygelAVTransport* self,
 }
 
 
+static void rygel_av_transport_notify_play_mode_cb (RygelAVTransport* self, GObject* player, GParamSpec* p) {
+	RygelChangeLog* _tmp0_ = NULL;
+	RygelPlayerControllerInterface* _tmp1_ = NULL;
+	const gchar* _tmp2_ = NULL;
+	const gchar* _tmp3_ = NULL;
+	g_return_if_fail (self != NULL);
+	g_return_if_fail (player != NULL);
+	g_return_if_fail (p != NULL);
+	_tmp0_ = self->priv->changelog;
+	_tmp1_ = self->priv->controller;
+	_tmp2_ = rygel_player_controller_interface_get_play_mode (_tmp1_);
+	_tmp3_ = _tmp2_;
+	rygel_change_log_log (_tmp0_, "CurrentPlayMode", _tmp3_);
+}
+
+
 static void _vala_GUPnPServiceAction_free (GUPnPServiceAction* self) {
 	g_boxed_free (gupnp_service_action_get_type (), self);
 }
@@ -2724,7 +2750,7 @@ static void rygel_av_transport_check_resource (RygelAVTransport* self, SoupMessa
 		SoupSession* _tmp22_ = NULL;
 		SoupMessage* _tmp23_ = NULL;
 		SoupMessage* _tmp24_ = NULL;
-		g_debug ("rygel-av-transport.vala:769: Peer does not support HEAD, trying GET");
+		g_debug ("rygel-av-transport.vala:775: Peer does not support HEAD, trying GET");
 		_tmp20_ = msg;
 		g_object_set (_tmp20_, "method", "GET", NULL);
 		_tmp21_ = msg;
@@ -2795,7 +2821,7 @@ static void rygel_av_transport_check_resource (RygelAVTransport* self, SoupMessa
 		GUPnPServiceAction* _tmp53_ = NULL;
 		const gchar* _tmp54_ = NULL;
 		_tmp52_ = mime;
-		g_debug ("rygel-av-transport.vala:799: Unsupported mime type %s", _tmp52_);
+		g_debug ("rygel-av-transport.vala:805: Unsupported mime type %s", _tmp52_);
 		_tmp53_ = action;
 		_tmp54_ = _ ("Illegal MIME-type");
 		gupnp_service_action_return_error (_tmp53_, (guint) 714, _tmp54_);
diff --git a/src/librygel-renderer/rygel-av-transport.vala b/src/librygel-renderer/rygel-av-transport.vala
index 8001397..af95b89 100644
--- a/src/librygel-renderer/rygel-av-transport.vala
+++ b/src/librygel-renderer/rygel-av-transport.vala
@@ -131,6 +131,7 @@ internal class Rygel.AVTransport : Service {
         this.controller.notify["track-metadata"].connect (this.notify_track_meta_data_cb);
         this.controller.notify["next-uri"].connect (this.notify_next_uri_cb);
         this.controller.notify["next-metadata"].connect (this.notify_next_meta_data_cb);
+        this.controller.notify["play-mode"].connect (this.notify_play_mode_cb);
 
         this.player.notify["duration"].connect (this.notify_duration_cb);
 
@@ -687,6 +688,11 @@ internal class Rygel.AVTransport : Service {
                             this.controller.next_metadata);
     }
 
+    private void notify_play_mode_cb (Object player, ParamSpec p) {
+        this.changelog.log ("CurrentPlayMode",
+                            this.controller.play_mode);
+    }
+
     private async void handle_playlist (ServiceAction action,
                                         string uri,
                                         string metadata,
-- 
2.7.4

