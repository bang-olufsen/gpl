From 4516446909d86c57b1fee06e97e5b9b49ca26454 Mon Sep 17 00:00:00 2001
From: Simon Mikuda <simon.mikuda@streamunlimited.com>
Date: Tue, 10 Mar 2015 16:08:59 +0100
Subject: [PATCH] rygel-controller: Add getter for play mode

Signed-off-by: Simon Mikuda <simon.mikuda@streamunlimited.com>
---
 src/librygel-renderer/rygel-av-transport.c         | 254 +++++++++------------
 src/librygel-renderer/rygel-av-transport.vala      |  19 +-
 .../rygel-media-renderer-plugin.c                  |   3 +-
 src/librygel-renderer/rygel-media-renderer.c       |   3 +-
 .../rygel-player-controller-interface.c            |  25 +-
 .../rygel-player-controller-interface.vala         |   2 +-
 src/librygel-renderer/rygel-player-controller.c    |  63 +++--
 src/librygel-renderer/rygel-player-controller.vala |   4 +-
 src/librygel-renderer/rygel-qplay.c                |   3 +-
 src/librygel-renderer/rygel-renderer.h             |   6 +-
 10 files changed, 190 insertions(+), 192 deletions(-)

diff --git a/src/librygel-renderer/rygel-av-transport.c b/src/librygel-renderer/rygel-av-transport.c
index cc8ce85..bd6e37f 100644
--- a/src/librygel-renderer/rygel-av-transport.c
+++ b/src/librygel-renderer/rygel-av-transport.c
@@ -156,7 +156,6 @@ struct _RygelPlayerControllerInterfaceIface {
 	void (*set_tracks_info) (RygelPlayerControllerInterface* self, const gchar* queue_id, const gchar* starting_index, const gchar* next_index, const gchar* tracks_meta_data);
 	void (*calc_tracks_count) (RygelPlayerControllerInterface* self);
 	void (*calc_max_tracks) (RygelPlayerControllerInterface* self);
-	void (*set_play_mode) (RygelPlayerControllerInterface* self, const gchar* new_play_mode);
 	const gchar* (*get_playback_state) (RygelPlayerControllerInterface* self);
 	void (*set_playback_state) (RygelPlayerControllerInterface* self, const gchar* value);
 	guint (*get_n_tracks) (RygelPlayerControllerInterface* self);
@@ -204,6 +203,8 @@ struct _RygelPlayerControllerInterfaceIface {
 	void (*set_tracks_count) (RygelPlayerControllerInterface* self, const gchar* value);
 	const gchar* (*get_max_tracks) (RygelPlayerControllerInterface* self);
 	void (*set_max_tracks) (RygelPlayerControllerInterface* self, const gchar* value);
+	const gchar* (*get_play_mode) (RygelPlayerControllerInterface* self);
+	void (*set_play_mode) (RygelPlayerControllerInterface* self, const gchar* value);
 	gint64 (*get_media_duration) (RygelPlayerControllerInterface* self);
 };
 
@@ -211,7 +212,6 @@ struct _RygelAVTransportPrivate {
 	SoupSession* session;
 	gchar* protocol_info;
 	gchar* _status;
-	gchar* _mode;
 	RygelChangeLog* changelog;
 	RygelMediaPlayer* player;
 	RygelPlayerControllerInterface* controller;
@@ -305,8 +305,7 @@ enum  {
 	RYGEL_AV_TRANSPORT_STATUS,
 	RYGEL_AV_TRANSPORT_PLAYBACK_MEDIUM,
 	RYGEL_AV_TRANSPORT_POSSIBLE_PLAYBACK_MEDIA,
-	RYGEL_AV_TRANSPORT_SPEED,
-	RYGEL_AV_TRANSPORT_MODE
+	RYGEL_AV_TRANSPORT_SPEED
 };
 #define RYGEL_AV_TRANSPORT_UPNP_ID "urn:upnp-org:serviceId:AVTransport"
 #define RYGEL_AV_TRANSPORT_UPNP_TYPE "urn:schemas-upnp-org:service:AVTransport:2"
@@ -383,7 +382,7 @@ gchar* rygel_player_controller_interface_get_current_transport_actions (RygelPla
 const gchar* rygel_av_transport_get_status (RygelAVTransport* self);
 const gchar* rygel_av_transport_get_playback_medium (RygelAVTransport* self);
 const gchar* rygel_av_transport_get_possible_playback_media (RygelAVTransport* self);
-const gchar* rygel_av_transport_get_mode (RygelAVTransport* self);
+const gchar* rygel_player_controller_interface_get_play_mode (RygelPlayerControllerInterface* self);
 gchar* rygel_media_player_get_playback_speed (RygelMediaPlayer* self);
 guint rygel_player_controller_interface_get_n_tracks (RygelPlayerControllerInterface* self);
 guint rygel_player_controller_interface_get_track (RygelPlayerControllerInterface* self);
@@ -447,13 +446,12 @@ static void rygel_av_transport_set_qplay_queue_uri (RygelAVTransport* self, GUPn
 void rygel_player_controller_interface_set_qplay_queue_uri (RygelPlayerControllerInterface* self, const gchar* uri, const gchar* metadata, const gchar* mime, const gchar* features);
 void rygel_player_controller_interface_set_single_play_uri (RygelPlayerControllerInterface* self, const gchar* uri, const gchar* metadata, const gchar* mime, const gchar* features);
 void rygel_player_controller_interface_set_next_single_play_uri (RygelPlayerControllerInterface* self, const gchar* uri, const gchar* metadata, const gchar* mime, const gchar* features);
-void rygel_player_controller_interface_set_play_mode (RygelPlayerControllerInterface* self, const gchar* new_play_mode);
+void rygel_player_controller_interface_set_play_mode (RygelPlayerControllerInterface* self, const gchar* value);
 RygelAVTransport* rygel_av_transport_new (void);
 RygelAVTransport* rygel_av_transport_construct (GType object_type);
 void rygel_av_transport_set_status (RygelAVTransport* self, const gchar* value);
 gchar* rygel_av_transport_get_speed (RygelAVTransport* self);
 void rygel_av_transport_set_speed (RygelAVTransport* self, const gchar* value);
-void rygel_av_transport_set_mode (RygelAVTransport* self, const gchar* value);
 static void rygel_av_transport_finalize (GObject* obj);
 static void _vala_rygel_av_transport_get_property (GObject * object, guint property_id, GValue * value, GParamSpec * pspec);
 static void _vala_rygel_av_transport_set_property (GObject * object, guint property_id, const GValue * value, GParamSpec * pspec);
@@ -743,52 +741,53 @@ static void rygel_av_transport_query_last_change_cb (RygelAVTransport* self, GUP
 	const gchar* _tmp11_ = NULL;
 	const gchar* _tmp12_ = NULL;
 	const gchar* _tmp13_ = NULL;
-	const gchar* _tmp14_ = NULL;
+	RygelPlayerControllerInterface* _tmp14_ = NULL;
 	const gchar* _tmp15_ = NULL;
-	RygelMediaPlayer* _tmp16_ = NULL;
-	gchar* _tmp17_ = NULL;
+	const gchar* _tmp16_ = NULL;
+	RygelMediaPlayer* _tmp17_ = NULL;
 	gchar* _tmp18_ = NULL;
 	gchar* _tmp19_ = NULL;
-	RygelPlayerControllerInterface* _tmp20_ = NULL;
-	guint _tmp21_ = 0U;
+	gchar* _tmp20_ = NULL;
+	RygelPlayerControllerInterface* _tmp21_ = NULL;
 	guint _tmp22_ = 0U;
-	gchar* _tmp23_ = NULL;
+	guint _tmp23_ = 0U;
 	gchar* _tmp24_ = NULL;
-	RygelPlayerControllerInterface* _tmp25_ = NULL;
-	guint _tmp26_ = 0U;
+	gchar* _tmp25_ = NULL;
+	RygelPlayerControllerInterface* _tmp26_ = NULL;
 	guint _tmp27_ = 0U;
-	gchar* _tmp28_ = NULL;
+	guint _tmp28_ = 0U;
 	gchar* _tmp29_ = NULL;
-	RygelMediaPlayer* _tmp30_ = NULL;
-	gchar* _tmp31_ = NULL;
+	gchar* _tmp30_ = NULL;
+	RygelMediaPlayer* _tmp31_ = NULL;
 	gchar* _tmp32_ = NULL;
 	gchar* _tmp33_ = NULL;
-	RygelMediaPlayer* _tmp34_ = NULL;
-	gchar* _tmp35_ = NULL;
+	gchar* _tmp34_ = NULL;
+	RygelMediaPlayer* _tmp35_ = NULL;
 	gchar* _tmp36_ = NULL;
 	gchar* _tmp37_ = NULL;
-	RygelPlayerControllerInterface* _tmp38_ = NULL;
-	const gchar* _tmp39_ = NULL;
+	gchar* _tmp38_ = NULL;
+	RygelPlayerControllerInterface* _tmp39_ = NULL;
 	const gchar* _tmp40_ = NULL;
-	RygelPlayerControllerInterface* _tmp41_ = NULL;
-	const gchar* _tmp42_ = NULL;
+	const gchar* _tmp41_ = NULL;
+	RygelPlayerControllerInterface* _tmp42_ = NULL;
 	const gchar* _tmp43_ = NULL;
-	RygelPlayerControllerInterface* _tmp44_ = NULL;
-	gchar* _tmp45_ = NULL;
+	const gchar* _tmp44_ = NULL;
+	RygelPlayerControllerInterface* _tmp45_ = NULL;
 	gchar* _tmp46_ = NULL;
 	gchar* _tmp47_ = NULL;
-	RygelPlayerControllerInterface* _tmp48_ = NULL;
-	gchar* _tmp49_ = NULL;
+	gchar* _tmp48_ = NULL;
+	RygelPlayerControllerInterface* _tmp49_ = NULL;
 	gchar* _tmp50_ = NULL;
 	gchar* _tmp51_ = NULL;
-	RygelPlayerControllerInterface* _tmp52_ = NULL;
-	const gchar* _tmp53_ = NULL;
+	gchar* _tmp52_ = NULL;
+	RygelPlayerControllerInterface* _tmp53_ = NULL;
 	const gchar* _tmp54_ = NULL;
-	RygelPlayerControllerInterface* _tmp55_ = NULL;
-	const gchar* _tmp56_ = NULL;
+	const gchar* _tmp55_ = NULL;
+	RygelPlayerControllerInterface* _tmp56_ = NULL;
 	const gchar* _tmp57_ = NULL;
-	gchar* _tmp58_ = NULL;
+	const gchar* _tmp58_ = NULL;
 	gchar* _tmp59_ = NULL;
+	gchar* _tmp60_ = NULL;
 	g_return_if_fail (self != NULL);
 	g_return_if_fail (service != NULL);
 	g_return_if_fail (variable != NULL);
@@ -816,77 +815,78 @@ static void rygel_av_transport_query_last_change_cb (RygelAVTransport* self, GUP
 	_tmp13_ = _tmp12_;
 	rygel_change_log_log (log, "PossiblePlaybackStorageMedia", _tmp13_);
 	rygel_change_log_log (log, "PossibleRecordStorageMedia", "NOT_IMPLEMENTED");
-	_tmp14_ = rygel_av_transport_get_mode (self);
-	_tmp15_ = _tmp14_;
-	rygel_change_log_log (log, "CurrentPlayMode", _tmp15_);
-	_tmp16_ = self->priv->player;
-	_tmp17_ = rygel_media_player_get_playback_speed (_tmp16_);
-	_tmp18_ = _tmp17_;
+	_tmp14_ = self->priv->controller;
+	_tmp15_ = rygel_player_controller_interface_get_play_mode (_tmp14_);
+	_tmp16_ = _tmp15_;
+	rygel_change_log_log (log, "CurrentPlayMode", _tmp16_);
+	_tmp17_ = self->priv->player;
+	_tmp18_ = rygel_media_player_get_playback_speed (_tmp17_);
 	_tmp19_ = _tmp18_;
-	rygel_change_log_log (log, "TransportPlaySpeed", _tmp19_);
-	_g_free0 (_tmp19_);
+	_tmp20_ = _tmp19_;
+	rygel_change_log_log (log, "TransportPlaySpeed", _tmp20_);
+	_g_free0 (_tmp20_);
 	rygel_change_log_log (log, "RecordMediumWriteStatus", "NOT_IMPLEMENTED");
 	rygel_change_log_log (log, "CurrentRecordQualityMode", "NOT_IMPLEMENTED");
 	rygel_change_log_log (log, "PossibleRecordQualityModes", "NOT_IMPLEMENTED");
-	_tmp20_ = self->priv->controller;
-	_tmp21_ = rygel_player_controller_interface_get_n_tracks (_tmp20_);
-	_tmp22_ = _tmp21_;
-	_tmp23_ = g_strdup_printf ("%u", _tmp22_);
-	_tmp24_ = _tmp23_;
-	rygel_change_log_log (log, "NumberOfTracks", _tmp24_);
-	_g_free0 (_tmp24_);
-	_tmp25_ = self->priv->controller;
-	_tmp26_ = rygel_player_controller_interface_get_track (_tmp25_);
-	_tmp27_ = _tmp26_;
-	_tmp28_ = g_strdup_printf ("%u", _tmp27_);
-	_tmp29_ = _tmp28_;
-	rygel_change_log_log (log, "CurrentTrack", _tmp29_);
-	_g_free0 (_tmp29_);
-	_tmp30_ = self->priv->player;
-	_tmp31_ = rygel_media_player_get_duration_as_str (_tmp30_);
-	_tmp32_ = _tmp31_;
+	_tmp21_ = self->priv->controller;
+	_tmp22_ = rygel_player_controller_interface_get_n_tracks (_tmp21_);
+	_tmp23_ = _tmp22_;
+	_tmp24_ = g_strdup_printf ("%u", _tmp23_);
+	_tmp25_ = _tmp24_;
+	rygel_change_log_log (log, "NumberOfTracks", _tmp25_);
+	_g_free0 (_tmp25_);
+	_tmp26_ = self->priv->controller;
+	_tmp27_ = rygel_player_controller_interface_get_track (_tmp26_);
+	_tmp28_ = _tmp27_;
+	_tmp29_ = g_strdup_printf ("%u", _tmp28_);
+	_tmp30_ = _tmp29_;
+	rygel_change_log_log (log, "CurrentTrack", _tmp30_);
+	_g_free0 (_tmp30_);
+	_tmp31_ = self->priv->player;
+	_tmp32_ = rygel_media_player_get_duration_as_str (_tmp31_);
 	_tmp33_ = _tmp32_;
-	rygel_change_log_log (log, "CurrentTrackDuration", _tmp33_);
-	_g_free0 (_tmp33_);
-	_tmp34_ = self->priv->player;
-	_tmp35_ = rygel_media_player_get_duration_as_str (_tmp34_);
-	_tmp36_ = _tmp35_;
+	_tmp34_ = _tmp33_;
+	rygel_change_log_log (log, "CurrentTrackDuration", _tmp34_);
+	_g_free0 (_tmp34_);
+	_tmp35_ = self->priv->player;
+	_tmp36_ = rygel_media_player_get_duration_as_str (_tmp35_);
 	_tmp37_ = _tmp36_;
-	rygel_change_log_log (log, "CurrentMediaDuration", _tmp37_);
-	_g_free0 (_tmp37_);
-	_tmp38_ = self->priv->controller;
-	_tmp39_ = rygel_player_controller_interface_get_uri (_tmp38_);
-	_tmp40_ = _tmp39_;
-	rygel_change_log_log (log, "AVTransportURI", _tmp40_);
-	_tmp41_ = self->priv->controller;
-	_tmp42_ = rygel_player_controller_interface_get_metadata (_tmp41_);
-	_tmp43_ = _tmp42_;
-	rygel_change_log_log (log, "AVTransportURIMetaData", _tmp43_);
-	_tmp44_ = self->priv->controller;
-	_tmp45_ = rygel_player_controller_interface_get_track_uri (_tmp44_);
-	_tmp46_ = _tmp45_;
+	_tmp38_ = _tmp37_;
+	rygel_change_log_log (log, "CurrentMediaDuration", _tmp38_);
+	_g_free0 (_tmp38_);
+	_tmp39_ = self->priv->controller;
+	_tmp40_ = rygel_player_controller_interface_get_uri (_tmp39_);
+	_tmp41_ = _tmp40_;
+	rygel_change_log_log (log, "AVTransportURI", _tmp41_);
+	_tmp42_ = self->priv->controller;
+	_tmp43_ = rygel_player_controller_interface_get_metadata (_tmp42_);
+	_tmp44_ = _tmp43_;
+	rygel_change_log_log (log, "AVTransportURIMetaData", _tmp44_);
+	_tmp45_ = self->priv->controller;
+	_tmp46_ = rygel_player_controller_interface_get_track_uri (_tmp45_);
 	_tmp47_ = _tmp46_;
-	rygel_change_log_log (log, "CurrentTrackURI", _tmp47_);
-	_g_free0 (_tmp47_);
-	_tmp48_ = self->priv->controller;
-	_tmp49_ = rygel_player_controller_interface_get_track_metadata (_tmp48_);
-	_tmp50_ = _tmp49_;
+	_tmp48_ = _tmp47_;
+	rygel_change_log_log (log, "CurrentTrackURI", _tmp48_);
+	_g_free0 (_tmp48_);
+	_tmp49_ = self->priv->controller;
+	_tmp50_ = rygel_player_controller_interface_get_track_metadata (_tmp49_);
 	_tmp51_ = _tmp50_;
-	rygel_change_log_log (log, "CurrentTrackMetaData", _tmp51_);
-	_g_free0 (_tmp51_);
-	_tmp52_ = self->priv->controller;
-	_tmp53_ = rygel_player_controller_interface_get_next_uri (_tmp52_);
-	_tmp54_ = _tmp53_;
-	rygel_change_log_log (log, "NextAVTransportURI", _tmp54_);
-	_tmp55_ = self->priv->controller;
-	_tmp56_ = rygel_player_controller_interface_get_next_metadata (_tmp55_);
-	_tmp57_ = _tmp56_;
-	rygel_change_log_log (log, "NextAVTransportURIMetaData", _tmp57_);
+	_tmp52_ = _tmp51_;
+	rygel_change_log_log (log, "CurrentTrackMetaData", _tmp52_);
+	_g_free0 (_tmp52_);
+	_tmp53_ = self->priv->controller;
+	_tmp54_ = rygel_player_controller_interface_get_next_uri (_tmp53_);
+	_tmp55_ = _tmp54_;
+	rygel_change_log_log (log, "NextAVTransportURI", _tmp55_);
+	_tmp56_ = self->priv->controller;
+	_tmp57_ = rygel_player_controller_interface_get_next_metadata (_tmp56_);
+	_tmp58_ = _tmp57_;
+	rygel_change_log_log (log, "NextAVTransportURIMetaData", _tmp58_);
 	g_value_init (value, G_TYPE_STRING);
-	_tmp58_ = rygel_change_log_finish (log);
-	_tmp59_ = _tmp58_;
-	g_value_set_string (value, _tmp59_);
-	_g_free0 (_tmp59_);
+	_tmp59_ = rygel_change_log_finish (log);
+	_tmp60_ = _tmp59_;
+	g_value_set_string (value, _tmp60_);
+	_g_free0 (_tmp60_);
 	_g_object_unref0 (log);
 }
 
@@ -1506,9 +1506,10 @@ static void rygel_av_transport_get_transport_settings_cb (RygelAVTransport* self
 	GUPnPServiceAction* _tmp0_ = NULL;
 	gboolean _tmp1_ = FALSE;
 	GUPnPServiceAction* _tmp2_ = NULL;
-	const gchar* _tmp3_ = NULL;
+	RygelPlayerControllerInterface* _tmp3_ = NULL;
 	const gchar* _tmp4_ = NULL;
-	GUPnPServiceAction* _tmp5_ = NULL;
+	const gchar* _tmp5_ = NULL;
+	GUPnPServiceAction* _tmp6_ = NULL;
 	g_return_if_fail (self != NULL);
 	g_return_if_fail (service != NULL);
 	g_return_if_fail (action != NULL);
@@ -1518,11 +1519,12 @@ static void rygel_av_transport_get_transport_settings_cb (RygelAVTransport* self
 		return;
 	}
 	_tmp2_ = action;
-	_tmp3_ = rygel_av_transport_get_mode (self);
-	_tmp4_ = _tmp3_;
-	gupnp_service_action_set (_tmp2_, "PlayMode", G_TYPE_STRING, _tmp4_, "RecQualityMode", G_TYPE_STRING, "NOT_IMPLEMENTED", NULL);
-	_tmp5_ = action;
-	gupnp_service_action_return (_tmp5_);
+	_tmp3_ = self->priv->controller;
+	_tmp4_ = rygel_player_controller_interface_get_play_mode (_tmp3_);
+	_tmp5_ = _tmp4_;
+	gupnp_service_action_set (_tmp2_, "PlayMode", G_TYPE_STRING, _tmp5_, "RecQualityMode", G_TYPE_STRING, "NOT_IMPLEMENTED", NULL);
+	_tmp6_ = action;
+	gupnp_service_action_return (_tmp6_);
 }
 
 
@@ -1735,7 +1737,7 @@ static void rygel_av_transport_seek_cb (RygelAVTransport* self, GUPnPService* se
 				_tmp8_ = rygel_time_utils_time_from_string (_tmp7_);
 				seek_target = _tmp8_;
 				_tmp9_ = seek_target;
-				g_debug ("rygel-av-transport.vala:531: Seeking to %lld sec", _tmp9_ / G_TIME_SPAN_SECOND);
+				g_debug ("rygel-av-transport.vala:518: Seeking to %lld sec", _tmp9_ / G_TIME_SPAN_SECOND);
 				_tmp10_ = self->priv->player;
 				_tmp11_ = rygel_media_player_get_can_seek (_tmp10_);
 				_tmp12_ = _tmp11_;
@@ -1801,7 +1803,7 @@ static void rygel_av_transport_seek_cb (RygelAVTransport* self, GUPnPService* se
 					seek_target = _tmp24_ + _tmp27_;
 				}
 				_tmp28_ = seek_target;
-				g_debug ("rygel-av-transport.vala:556: Seeking to %lld bytes.", _tmp28_);
+				g_debug ("rygel-av-transport.vala:543: Seeking to %lld bytes.", _tmp28_);
 				_tmp29_ = self->priv->player;
 				_tmp30_ = rygel_media_player_get_can_seek_bytes (_tmp29_);
 				_tmp31_ = _tmp30_;
@@ -1849,7 +1851,7 @@ static void rygel_av_transport_seek_cb (RygelAVTransport* self, GUPnPService* se
 				gint _tmp52_ = 0;
 				GUPnPServiceAction* _tmp53_ = NULL;
 				_tmp40_ = target;
-				g_debug ("rygel-av-transport.vala:574: Setting track to %s.", _tmp40_);
+				g_debug ("rygel-av-transport.vala:561: Setting track to %s.", _tmp40_);
 				_tmp41_ = target;
 				_tmp42_ = atoi (_tmp41_);
 				track = _tmp42_;
@@ -2729,7 +2731,7 @@ static void rygel_av_transport_check_resource (RygelAVTransport* self, SoupMessa
 		SoupSession* _tmp22_ = NULL;
 		SoupMessage* _tmp23_ = NULL;
 		SoupMessage* _tmp24_ = NULL;
-		g_debug ("rygel-av-transport.vala:781: Peer does not support HEAD, trying GET");
+		g_debug ("rygel-av-transport.vala:768: Peer does not support HEAD, trying GET");
 		_tmp20_ = msg;
 		g_object_set (_tmp20_, "method", "GET", NULL);
 		_tmp21_ = msg;
@@ -2800,7 +2802,7 @@ static void rygel_av_transport_check_resource (RygelAVTransport* self, SoupMessa
 		GUPnPServiceAction* _tmp53_ = NULL;
 		const gchar* _tmp54_ = NULL;
 		_tmp52_ = mime;
-		g_debug ("rygel-av-transport.vala:811: Unsupported mime type %s", _tmp52_);
+		g_debug ("rygel-av-transport.vala:798: Unsupported mime type %s", _tmp52_);
 		_tmp53_ = action;
 		_tmp54_ = _ ("Illegal MIME-type");
 		gupnp_service_action_return_error (_tmp53_, (guint) 714, _tmp54_);
@@ -3317,33 +3319,6 @@ void rygel_av_transport_set_speed (RygelAVTransport* self, const gchar* value) {
 }
 
 
-const gchar* rygel_av_transport_get_mode (RygelAVTransport* self) {
-	const gchar* result;
-	const gchar* _tmp0_ = NULL;
-	g_return_val_if_fail (self != NULL, NULL);
-	_tmp0_ = self->priv->_mode;
-	result = _tmp0_;
-	return result;
-}
-
-
-void rygel_av_transport_set_mode (RygelAVTransport* self, const gchar* value) {
-	const gchar* _tmp0_ = NULL;
-	gchar* _tmp1_ = NULL;
-	RygelChangeLog* _tmp2_ = NULL;
-	const gchar* _tmp3_ = NULL;
-	g_return_if_fail (self != NULL);
-	_tmp0_ = value;
-	_tmp1_ = g_strdup (_tmp0_);
-	_g_free0 (self->priv->_mode);
-	self->priv->_mode = _tmp1_;
-	_tmp2_ = self->priv->changelog;
-	_tmp3_ = self->priv->_mode;
-	rygel_change_log_log (_tmp2_, "CurrentPlayMode", _tmp3_);
-	g_object_notify ((GObject *) self, "mode");
-}
-
-
 static void rygel_av_transport_class_init (RygelAVTransportClass * klass) {
 	rygel_av_transport_parent_class = g_type_class_peek_parent (klass);
 	g_type_class_add_private (klass, sizeof (RygelAVTransportPrivate));
@@ -3355,18 +3330,14 @@ static void rygel_av_transport_class_init (RygelAVTransportClass * klass) {
 	g_object_class_install_property (G_OBJECT_CLASS (klass), RYGEL_AV_TRANSPORT_PLAYBACK_MEDIUM, g_param_spec_string ("playback-medium", "playback-medium", "playback-medium", NULL, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE));
 	g_object_class_install_property (G_OBJECT_CLASS (klass), RYGEL_AV_TRANSPORT_POSSIBLE_PLAYBACK_MEDIA, g_param_spec_string ("possible-playback-media", "possible-playback-media", "possible-playback-media", NULL, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE));
 	g_object_class_install_property (G_OBJECT_CLASS (klass), RYGEL_AV_TRANSPORT_SPEED, g_param_spec_string ("speed", "speed", "speed", NULL, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_WRITABLE));
-	g_object_class_install_property (G_OBJECT_CLASS (klass), RYGEL_AV_TRANSPORT_MODE, g_param_spec_string ("mode", "mode", "mode", NULL, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_WRITABLE));
 }
 
 
 static void rygel_av_transport_instance_init (RygelAVTransport * self) {
 	gchar* _tmp0_ = NULL;
-	gchar* _tmp1_ = NULL;
 	self->priv = RYGEL_AV_TRANSPORT_GET_PRIVATE (self);
 	_tmp0_ = g_strdup ("OK");
 	self->priv->_status = _tmp0_;
-	_tmp1_ = g_strdup ("NORMAL");
-	self->priv->_mode = _tmp1_;
 }
 
 
@@ -3376,7 +3347,6 @@ static void rygel_av_transport_finalize (GObject* obj) {
 	_g_object_unref0 (self->priv->session);
 	_g_free0 (self->priv->protocol_info);
 	_g_free0 (self->priv->_status);
-	_g_free0 (self->priv->_mode);
 	_g_object_unref0 (self->priv->changelog);
 	_g_object_unref0 (self->priv->player);
 	_g_object_unref0 (self->priv->controller);
@@ -3412,9 +3382,6 @@ static void _vala_rygel_av_transport_get_property (GObject * object, guint prope
 		case RYGEL_AV_TRANSPORT_SPEED:
 		g_value_take_string (value, rygel_av_transport_get_speed (self));
 		break;
-		case RYGEL_AV_TRANSPORT_MODE:
-		g_value_set_string (value, rygel_av_transport_get_mode (self));
-		break;
 		default:
 		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
 		break;
@@ -3432,9 +3399,6 @@ static void _vala_rygel_av_transport_set_property (GObject * object, guint prope
 		case RYGEL_AV_TRANSPORT_SPEED:
 		rygel_av_transport_set_speed (self, g_value_get_string (value));
 		break;
-		case RYGEL_AV_TRANSPORT_MODE:
-		rygel_av_transport_set_mode (self, g_value_get_string (value));
-		break;
 		default:
 		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
 		break;
diff --git a/src/librygel-renderer/rygel-av-transport.vala b/src/librygel-renderer/rygel-av-transport.vala
index 68a7d6a..1437fd7 100644
--- a/src/librygel-renderer/rygel-av-transport.vala
+++ b/src/librygel-renderer/rygel-av-transport.vala
@@ -83,19 +83,6 @@ internal class Rygel.AVTransport : Service {
         }
     }
 
-    private string _mode = "NORMAL";
-    public string mode {
-        get {
-            return this._mode;
-        }
-
-        set {
-            this._mode = value;
-
-            this.changelog.log ("CurrentPlayMode", this._mode);
-        }
-    }
-
     private ChangeLog changelog;
     private MediaPlayer player;
     private PlayerControllerInterface controller;
@@ -172,7 +159,7 @@ internal class Rygel.AVTransport : Service {
         log.log ("RecordStorageMedium",          "NOT_IMPLEMENTED");
         log.log ("PossiblePlaybackStorageMedia", this.possible_playback_media);
         log.log ("PossibleRecordStorageMedia",   "NOT_IMPLEMENTED");
-        log.log ("CurrentPlayMode",              this.mode);
+        log.log ("CurrentPlayMode",              this.controller.play_mode);
         log.log ("TransportPlaySpeed",           this.player.playback_speed);
         log.log ("RecordMediumWriteStatus",      "NOT_IMPLEMENTED");
         log.log ("CurrentRecordQualityMode",     "NOT_IMPLEMENTED");
@@ -449,7 +436,7 @@ internal class Rygel.AVTransport : Service {
 
         action.set ("PlayMode",
                         typeof (string),
-                        this.mode,
+                        this.controller.play_mode,
                     "RecQualityMode",
                         typeof (string),
                         "NOT_IMPLEMENTED");
@@ -919,7 +906,7 @@ internal class Rygel.AVTransport : Service {
         case "NORMAL" :
         case "REPEAT_TRACK" :
         case "REPEAT_ALL"   :
-            this.controller.set_play_mode(_play_mode);
+            this.controller.play_mode = _play_mode;
             break;
         default:
             action.return_error (712, _("Play mode not supported"));
diff --git a/src/librygel-renderer/rygel-media-renderer-plugin.c b/src/librygel-renderer/rygel-media-renderer-plugin.c
index 6d388e6..705ebc0 100644
--- a/src/librygel-renderer/rygel-media-renderer-plugin.c
+++ b/src/librygel-renderer/rygel-media-renderer-plugin.c
@@ -175,7 +175,6 @@ struct _RygelPlayerControllerInterfaceIface {
 	void (*set_tracks_info) (RygelPlayerControllerInterface* self, const gchar* queue_id, const gchar* starting_index, const gchar* next_index, const gchar* tracks_meta_data);
 	void (*calc_tracks_count) (RygelPlayerControllerInterface* self);
 	void (*calc_max_tracks) (RygelPlayerControllerInterface* self);
-	void (*set_play_mode) (RygelPlayerControllerInterface* self, const gchar* new_play_mode);
 	const gchar* (*get_playback_state) (RygelPlayerControllerInterface* self);
 	void (*set_playback_state) (RygelPlayerControllerInterface* self, const gchar* value);
 	guint (*get_n_tracks) (RygelPlayerControllerInterface* self);
@@ -223,6 +222,8 @@ struct _RygelPlayerControllerInterfaceIface {
 	void (*set_tracks_count) (RygelPlayerControllerInterface* self, const gchar* value);
 	const gchar* (*get_max_tracks) (RygelPlayerControllerInterface* self);
 	void (*set_max_tracks) (RygelPlayerControllerInterface* self, const gchar* value);
+	const gchar* (*get_play_mode) (RygelPlayerControllerInterface* self);
+	void (*set_play_mode) (RygelPlayerControllerInterface* self, const gchar* value);
 	gint64 (*get_media_duration) (RygelPlayerControllerInterface* self);
 };
 
diff --git a/src/librygel-renderer/rygel-media-renderer.c b/src/librygel-renderer/rygel-media-renderer.c
index 23c742a..d0b397f 100644
--- a/src/librygel-renderer/rygel-media-renderer.c
+++ b/src/librygel-renderer/rygel-media-renderer.c
@@ -152,7 +152,6 @@ struct _RygelPlayerControllerInterfaceIface {
 	void (*set_tracks_info) (RygelPlayerControllerInterface* self, const gchar* queue_id, const gchar* starting_index, const gchar* next_index, const gchar* tracks_meta_data);
 	void (*calc_tracks_count) (RygelPlayerControllerInterface* self);
 	void (*calc_max_tracks) (RygelPlayerControllerInterface* self);
-	void (*set_play_mode) (RygelPlayerControllerInterface* self, const gchar* new_play_mode);
 	const gchar* (*get_playback_state) (RygelPlayerControllerInterface* self);
 	void (*set_playback_state) (RygelPlayerControllerInterface* self, const gchar* value);
 	guint (*get_n_tracks) (RygelPlayerControllerInterface* self);
@@ -200,6 +199,8 @@ struct _RygelPlayerControllerInterfaceIface {
 	void (*set_tracks_count) (RygelPlayerControllerInterface* self, const gchar* value);
 	const gchar* (*get_max_tracks) (RygelPlayerControllerInterface* self);
 	void (*set_max_tracks) (RygelPlayerControllerInterface* self, const gchar* value);
+	const gchar* (*get_play_mode) (RygelPlayerControllerInterface* self);
+	void (*set_play_mode) (RygelPlayerControllerInterface* self, const gchar* value);
 	gint64 (*get_media_duration) (RygelPlayerControllerInterface* self);
 };
 
diff --git a/src/librygel-renderer/rygel-player-controller-interface.c b/src/librygel-renderer/rygel-player-controller-interface.c
index ffc8afa..3bee155 100644
--- a/src/librygel-renderer/rygel-player-controller-interface.c
+++ b/src/librygel-renderer/rygel-player-controller-interface.c
@@ -53,7 +53,6 @@ struct _RygelPlayerControllerInterfaceIface {
 	void (*set_tracks_info) (RygelPlayerControllerInterface* self, const gchar* queue_id, const gchar* starting_index, const gchar* next_index, const gchar* tracks_meta_data);
 	void (*calc_tracks_count) (RygelPlayerControllerInterface* self);
 	void (*calc_max_tracks) (RygelPlayerControllerInterface* self);
-	void (*set_play_mode) (RygelPlayerControllerInterface* self, const gchar* new_play_mode);
 	const gchar* (*get_playback_state) (RygelPlayerControllerInterface* self);
 	void (*set_playback_state) (RygelPlayerControllerInterface* self, const gchar* value);
 	guint (*get_n_tracks) (RygelPlayerControllerInterface* self);
@@ -101,6 +100,8 @@ struct _RygelPlayerControllerInterfaceIface {
 	void (*set_tracks_count) (RygelPlayerControllerInterface* self, const gchar* value);
 	const gchar* (*get_max_tracks) (RygelPlayerControllerInterface* self);
 	void (*set_max_tracks) (RygelPlayerControllerInterface* self, const gchar* value);
+	const gchar* (*get_play_mode) (RygelPlayerControllerInterface* self);
+	void (*set_play_mode) (RygelPlayerControllerInterface* self, const gchar* value);
 	gint64 (*get_media_duration) (RygelPlayerControllerInterface* self);
 };
 
@@ -122,7 +123,6 @@ void rygel_player_controller_interface_get_tracks_info (RygelPlayerControllerInt
 void rygel_player_controller_interface_set_tracks_info (RygelPlayerControllerInterface* self, const gchar* queue_id, const gchar* starting_index, const gchar* next_index, const gchar* tracks_meta_data);
 void rygel_player_controller_interface_calc_tracks_count (RygelPlayerControllerInterface* self);
 void rygel_player_controller_interface_calc_max_tracks (RygelPlayerControllerInterface* self);
-void rygel_player_controller_interface_set_play_mode (RygelPlayerControllerInterface* self, const gchar* new_play_mode);
 const gchar* rygel_player_controller_interface_get_playback_state (RygelPlayerControllerInterface* self);
 void rygel_player_controller_interface_set_playback_state (RygelPlayerControllerInterface* self, const gchar* value);
 guint rygel_player_controller_interface_get_n_tracks (RygelPlayerControllerInterface* self);
@@ -170,6 +170,8 @@ const gchar* rygel_player_controller_interface_get_tracks_count (RygelPlayerCont
 void rygel_player_controller_interface_set_tracks_count (RygelPlayerControllerInterface* self, const gchar* value);
 const gchar* rygel_player_controller_interface_get_max_tracks (RygelPlayerControllerInterface* self);
 void rygel_player_controller_interface_set_max_tracks (RygelPlayerControllerInterface* self, const gchar* value);
+const gchar* rygel_player_controller_interface_get_play_mode (RygelPlayerControllerInterface* self);
+void rygel_player_controller_interface_set_play_mode (RygelPlayerControllerInterface* self, const gchar* value);
 gint64 rygel_player_controller_interface_get_media_duration (RygelPlayerControllerInterface* self);
 gchar* rygel_player_controller_interface_get_media_duration_as_str (RygelPlayerControllerInterface* self);
 gchar* rygel_time_utils_time_to_string (gint64 time);
@@ -265,12 +267,6 @@ void rygel_player_controller_interface_calc_max_tracks (RygelPlayerControllerInt
 }
 
 
-void rygel_player_controller_interface_set_play_mode (RygelPlayerControllerInterface* self, const gchar* new_play_mode) {
-	g_return_if_fail (self != NULL);
-	RYGEL_PLAYER_CONTROLLER_INTERFACE_GET_INTERFACE (self)->set_play_mode (self, new_play_mode);
-}
-
-
 const gchar* rygel_player_controller_interface_get_playback_state (RygelPlayerControllerInterface* self) {
 	g_return_val_if_fail (self != NULL, NULL);
 	return RYGEL_PLAYER_CONTROLLER_INTERFACE_GET_INTERFACE (self)->get_playback_state (self);
@@ -553,6 +549,18 @@ void rygel_player_controller_interface_set_max_tracks (RygelPlayerControllerInte
 }
 
 
+const gchar* rygel_player_controller_interface_get_play_mode (RygelPlayerControllerInterface* self) {
+	g_return_val_if_fail (self != NULL, NULL);
+	return RYGEL_PLAYER_CONTROLLER_INTERFACE_GET_INTERFACE (self)->get_play_mode (self);
+}
+
+
+void rygel_player_controller_interface_set_play_mode (RygelPlayerControllerInterface* self, const gchar* value) {
+	g_return_if_fail (self != NULL);
+	RYGEL_PLAYER_CONTROLLER_INTERFACE_GET_INTERFACE (self)->set_play_mode (self, value);
+}
+
+
 gint64 rygel_player_controller_interface_get_media_duration (RygelPlayerControllerInterface* self) {
 	g_return_val_if_fail (self != NULL, 0LL);
 	return RYGEL_PLAYER_CONTROLLER_INTERFACE_GET_INTERFACE (self)->get_media_duration (self);
@@ -601,6 +609,7 @@ static void rygel_player_controller_interface_base_init (RygelPlayerControllerIn
 		g_object_interface_install_property (iface, g_param_spec_string ("next-index", "next-index", "next-index", NULL, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_WRITABLE));
 		g_object_interface_install_property (iface, g_param_spec_string ("tracks-count", "tracks-count", "tracks-count", NULL, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_WRITABLE));
 		g_object_interface_install_property (iface, g_param_spec_string ("max-tracks", "max-tracks", "max-tracks", NULL, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_WRITABLE));
+		g_object_interface_install_property (iface, g_param_spec_string ("play-mode", "play-mode", "play-mode", NULL, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_WRITABLE));
 		g_object_interface_install_property (iface, g_param_spec_int64 ("media-duration", "media-duration", "media-duration", G_MININT64, G_MAXINT64, 0, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE));
 	}
 }
diff --git a/src/librygel-renderer/rygel-player-controller-interface.vala b/src/librygel-renderer/rygel-player-controller-interface.vala
index 8177472..eb5eed7 100644
--- a/src/librygel-renderer/rygel-player-controller-interface.vala
+++ b/src/librygel-renderer/rygel-player-controller-interface.vala
@@ -78,7 +78,7 @@ public interface Rygel.PlayerControllerInterface : Object {
     public abstract string max_tracks { get; set; }
     public abstract void calc_tracks_count ();
     public abstract void calc_max_tracks ();
-    public abstract void set_play_mode (string new_play_mode);
+    public abstract string play_mode { get; set; }
     /// Total duration of the current playlist in microseconds
     public abstract int64 media_duration { get; }
     /// The duration as a human-readable string, in HH:MM:SS format
diff --git a/src/librygel-renderer/rygel-player-controller.c b/src/librygel-renderer/rygel-player-controller.c
index 84a350e..91af642 100644
--- a/src/librygel-renderer/rygel-player-controller.c
+++ b/src/librygel-renderer/rygel-player-controller.c
@@ -80,7 +80,6 @@ struct _RygelPlayerControllerInterfaceIface {
 	void (*set_tracks_info) (RygelPlayerControllerInterface* self, const gchar* queue_id, const gchar* starting_index, const gchar* next_index, const gchar* tracks_meta_data);
 	void (*calc_tracks_count) (RygelPlayerControllerInterface* self);
 	void (*calc_max_tracks) (RygelPlayerControllerInterface* self);
-	void (*set_play_mode) (RygelPlayerControllerInterface* self, const gchar* new_play_mode);
 	const gchar* (*get_playback_state) (RygelPlayerControllerInterface* self);
 	void (*set_playback_state) (RygelPlayerControllerInterface* self, const gchar* value);
 	guint (*get_n_tracks) (RygelPlayerControllerInterface* self);
@@ -128,6 +127,8 @@ struct _RygelPlayerControllerInterfaceIface {
 	void (*set_tracks_count) (RygelPlayerControllerInterface* self, const gchar* value);
 	const gchar* (*get_max_tracks) (RygelPlayerControllerInterface* self);
 	void (*set_max_tracks) (RygelPlayerControllerInterface* self, const gchar* value);
+	const gchar* (*get_play_mode) (RygelPlayerControllerInterface* self);
+	void (*set_play_mode) (RygelPlayerControllerInterface* self, const gchar* value);
 	gint64 (*get_media_duration) (RygelPlayerControllerInterface* self);
 };
 
@@ -189,6 +190,7 @@ struct _RygelPlayerControllerPrivate {
 	gchar* _max_tracks;
 	gchar* _uri;
 	gchar* _metadata;
+	gchar* _play_mode;
 	gchar* _next_uri;
 	gchar* _next_metadata;
 	GList* playlist;
@@ -231,6 +233,7 @@ enum  {
 	RYGEL_PLAYER_CONTROLLER_TRACK,
 	RYGEL_PLAYER_CONTROLLER_URI,
 	RYGEL_PLAYER_CONTROLLER_METADATA,
+	RYGEL_PLAYER_CONTROLLER_PLAY_MODE,
 	RYGEL_PLAYER_CONTROLLER_TRACK_URI,
 	RYGEL_PLAYER_CONTROLLER_TRACK_METADATA,
 	RYGEL_PLAYER_CONTROLLER_MEDIA_DURATION,
@@ -285,7 +288,6 @@ static void rygel_player_controller_real_set_tracks_info (RygelPlayerControllerI
 void rygel_player_controller_interface_set_next_index (RygelPlayerControllerInterface* self, const gchar* value);
 static void rygel_player_controller_real_calc_tracks_count (RygelPlayerControllerInterface* base);
 static void rygel_player_controller_real_calc_max_tracks (RygelPlayerControllerInterface* base);
-static void rygel_player_controller_real_set_play_mode (RygelPlayerControllerInterface* base, const gchar* new_play_mode);
 static void rygel_player_controller_real_set_single_play_uri (RygelPlayerControllerInterface* base, const gchar* uri, const gchar* metadata, const gchar* mime, const gchar* features);
 static gchar* rygel_player_controller_unescape (RygelPlayerController* self, const gchar* input);
 void rygel_player_controller_interface_set_metadata (RygelPlayerControllerInterface* self, const gchar* value);
@@ -342,6 +344,7 @@ const gchar* rygel_player_controller_interface_get_starting_index (RygelPlayerCo
 const gchar* rygel_player_controller_interface_get_tracks_meta_data (RygelPlayerControllerInterface* self);
 const gchar* rygel_player_controller_interface_get_number_of_success (RygelPlayerControllerInterface* self);
 const gchar* rygel_player_controller_interface_get_number_of_tracks (RygelPlayerControllerInterface* self);
+const gchar* rygel_player_controller_interface_get_play_mode (RygelPlayerControllerInterface* self);
 gchar* rygel_player_controller_interface_get_track_uri (RygelPlayerControllerInterface* self);
 gchar* rygel_player_controller_interface_get_track_metadata (RygelPlayerControllerInterface* self);
 gint64 rygel_player_controller_interface_get_media_duration (RygelPlayerControllerInterface* self);
@@ -350,6 +353,7 @@ const gchar* rygel_player_controller_interface_get_next_index (RygelPlayerContro
 const gchar* rygel_player_controller_interface_get_tracks_count (RygelPlayerControllerInterface* self);
 const gchar* rygel_player_controller_interface_get_max_tracks (RygelPlayerControllerInterface* self);
 static void _vala_rygel_player_controller_get_property (GObject * object, guint property_id, GValue * value, GParamSpec * pspec);
+void rygel_player_controller_interface_set_play_mode (RygelPlayerControllerInterface* self, const gchar* value);
 static void _vala_rygel_player_controller_set_property (GObject * object, guint property_id, const GValue * value, GParamSpec * pspec);
 static void _vala_array_destroy (gpointer array, gint array_length, GDestroyNotify destroy_func);
 static void _vala_array_free (gpointer array, gint array_length, GDestroyNotify destroy_func);
@@ -624,13 +628,6 @@ static void rygel_player_controller_real_calc_max_tracks (RygelPlayerControllerI
 }
 
 
-static void rygel_player_controller_real_set_play_mode (RygelPlayerControllerInterface* base, const gchar* new_play_mode) {
-	RygelPlayerController * self;
-	self = (RygelPlayerController*) base;
-	g_return_if_fail (new_play_mode != NULL);
-}
-
-
 static void rygel_player_controller_real_set_single_play_uri (RygelPlayerControllerInterface* base, const gchar* uri, const gchar* metadata, const gchar* mime, const gchar* features) {
 	RygelPlayerController * self;
 	guint _tmp0_ = 0U;
@@ -1689,6 +1686,30 @@ static void rygel_player_controller_real_set_metadata (RygelPlayerControllerInte
 }
 
 
+static const gchar* rygel_player_controller_real_get_play_mode (RygelPlayerControllerInterface* base) {
+	const gchar* result;
+	RygelPlayerController* self;
+	const gchar* _tmp0_ = NULL;
+	self = (RygelPlayerController*) base;
+	_tmp0_ = self->priv->_play_mode;
+	result = _tmp0_;
+	return result;
+}
+
+
+static void rygel_player_controller_real_set_play_mode (RygelPlayerControllerInterface* base, const gchar* value) {
+	RygelPlayerController* self;
+	const gchar* _tmp0_ = NULL;
+	gchar* _tmp1_ = NULL;
+	self = (RygelPlayerController*) base;
+	_tmp0_ = value;
+	_tmp1_ = g_strdup (_tmp0_);
+	_g_free0 (self->priv->_play_mode);
+	self->priv->_play_mode = _tmp1_;
+	g_object_notify ((GObject *) self, "play-mode");
+}
+
+
 static gchar* rygel_player_controller_real_get_track_uri (RygelPlayerControllerInterface* base) {
 	gchar* result;
 	RygelPlayerController* self;
@@ -2196,6 +2217,7 @@ static void rygel_player_controller_class_init (RygelPlayerControllerClass * kla
 	g_object_class_install_property (G_OBJECT_CLASS (klass), RYGEL_PLAYER_CONTROLLER_TRACK, g_param_spec_uint ("track", "track", "track", 0, G_MAXUINT, 0, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_WRITABLE));
 	g_object_class_install_property (G_OBJECT_CLASS (klass), RYGEL_PLAYER_CONTROLLER_URI, g_param_spec_string ("uri", "uri", "uri", NULL, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE));
 	g_object_class_install_property (G_OBJECT_CLASS (klass), RYGEL_PLAYER_CONTROLLER_METADATA, g_param_spec_string ("metadata", "metadata", "metadata", NULL, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE));
+	g_object_class_install_property (G_OBJECT_CLASS (klass), RYGEL_PLAYER_CONTROLLER_PLAY_MODE, g_param_spec_string ("play-mode", "play-mode", "play-mode", NULL, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_WRITABLE));
 	g_object_class_install_property (G_OBJECT_CLASS (klass), RYGEL_PLAYER_CONTROLLER_TRACK_URI, g_param_spec_string ("track-uri", "track-uri", "track-uri", NULL, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE));
 	g_object_class_install_property (G_OBJECT_CLASS (klass), RYGEL_PLAYER_CONTROLLER_TRACK_METADATA, g_param_spec_string ("track-metadata", "track-metadata", "track-metadata", NULL, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE));
 	g_object_class_install_property (G_OBJECT_CLASS (klass), RYGEL_PLAYER_CONTROLLER_MEDIA_DURATION, g_param_spec_int64 ("media-duration", "media-duration", "media-duration", G_MININT64, G_MAXINT64, 0, G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE));
@@ -2220,7 +2242,6 @@ static void rygel_player_controller_rygel_player_controller_interface_interface_
 	iface->set_tracks_info = (void (*)(RygelPlayerControllerInterface*, const gchar*, const gchar*, const gchar*, const gchar*)) rygel_player_controller_real_set_tracks_info;
 	iface->calc_tracks_count = (void (*)(RygelPlayerControllerInterface*)) rygel_player_controller_real_calc_tracks_count;
 	iface->calc_max_tracks = (void (*)(RygelPlayerControllerInterface*)) rygel_player_controller_real_calc_max_tracks;
-	iface->set_play_mode = (void (*)(RygelPlayerControllerInterface*, const gchar*)) rygel_player_controller_real_set_play_mode;
 	iface->set_single_play_uri = (void (*)(RygelPlayerControllerInterface*, const gchar*, const gchar*, const gchar*, const gchar*)) rygel_player_controller_real_set_single_play_uri;
 	iface->set_qplay_queue_uri = (void (*)(RygelPlayerControllerInterface*, const gchar*, const gchar*, const gchar*, const gchar*)) rygel_player_controller_real_set_qplay_queue_uri;
 	iface->set_playlist_uri = (void (*)(RygelPlayerControllerInterface*, const gchar*, const gchar*, GUPnPMediaCollection*)) rygel_player_controller_real_set_playlist_uri;
@@ -2258,6 +2279,8 @@ static void rygel_player_controller_rygel_player_controller_interface_interface_
 	iface->set_uri = rygel_player_controller_real_set_uri;
 	iface->get_metadata = rygel_player_controller_real_get_metadata;
 	iface->set_metadata = rygel_player_controller_real_set_metadata;
+	iface->get_play_mode = rygel_player_controller_real_get_play_mode;
+	iface->set_play_mode = rygel_player_controller_real_set_play_mode;
 	iface->get_track_uri = rygel_player_controller_real_get_track_uri;
 	iface->set_track_uri = rygel_player_controller_real_set_track_uri;
 	iface->get_track_metadata = rygel_player_controller_real_get_track_metadata;
@@ -2297,6 +2320,7 @@ static void rygel_player_controller_instance_init (RygelPlayerController * self)
 	gchar* _tmp16_ = NULL;
 	gchar* _tmp17_ = NULL;
 	gchar* _tmp18_ = NULL;
+	gchar* _tmp19_ = NULL;
 	self->priv = RYGEL_PLAYER_CONTROLLER_GET_PRIVATE (self);
 	_tmp0_ = g_strdup ("");
 	self->priv->_manufacture_id = _tmp0_;
@@ -2330,12 +2354,14 @@ static void rygel_player_controller_instance_init (RygelPlayerController * self)
 	self->priv->_uri = _tmp14_;
 	_tmp15_ = g_strdup ("");
 	self->priv->_metadata = _tmp15_;
-	_tmp16_ = g_strdup ("");
-	self->priv->_next_uri = _tmp16_;
+	_tmp16_ = g_strdup ("NORMAL");
+	self->priv->_play_mode = _tmp16_;
 	_tmp17_ = g_strdup ("");
-	self->priv->_next_metadata = _tmp17_;
-	_tmp18_ = g_strdup ("NO_MEDIA_PRESENT");
-	self->priv->_playback_state = _tmp18_;
+	self->priv->_next_uri = _tmp17_;
+	_tmp18_ = g_strdup ("");
+	self->priv->_next_metadata = _tmp18_;
+	_tmp19_ = g_strdup ("NO_MEDIA_PRESENT");
+	self->priv->_playback_state = _tmp19_;
 	rygel_player_controller_interface_set_manufacture_id (self, "");
 	rygel_player_controller_interface_set_device_id (self, "");
 	rygel_player_controller_interface_set_auth_seed (self, "");
@@ -2374,6 +2400,7 @@ static void rygel_player_controller_finalize (GObject* obj) {
 	_g_free0 (self->priv->_max_tracks);
 	_g_free0 (self->priv->_uri);
 	_g_free0 (self->priv->_metadata);
+	_g_free0 (self->priv->_play_mode);
 	_g_free0 (self->priv->_next_uri);
 	_g_free0 (self->priv->_next_metadata);
 	__g_list_free__g_object_unref0_0 (self->priv->playlist);
@@ -2473,6 +2500,9 @@ static void _vala_rygel_player_controller_get_property (GObject * object, guint
 		case RYGEL_PLAYER_CONTROLLER_METADATA:
 		g_value_set_string (value, rygel_player_controller_interface_get_metadata ((RygelPlayerControllerInterface*) self));
 		break;
+		case RYGEL_PLAYER_CONTROLLER_PLAY_MODE:
+		g_value_set_string (value, rygel_player_controller_interface_get_play_mode ((RygelPlayerControllerInterface*) self));
+		break;
 		case RYGEL_PLAYER_CONTROLLER_TRACK_URI:
 		g_value_take_string (value, rygel_player_controller_interface_get_track_uri ((RygelPlayerControllerInterface*) self));
 		break;
@@ -2565,6 +2595,9 @@ static void _vala_rygel_player_controller_set_property (GObject * object, guint
 		case RYGEL_PLAYER_CONTROLLER_METADATA:
 		rygel_player_controller_interface_set_metadata ((RygelPlayerControllerInterface*) self, g_value_get_string (value));
 		break;
+		case RYGEL_PLAYER_CONTROLLER_PLAY_MODE:
+		rygel_player_controller_interface_set_play_mode ((RygelPlayerControllerInterface*) self, g_value_get_string (value));
+		break;
 		case RYGEL_PLAYER_CONTROLLER_TRACK_URI:
 		rygel_player_controller_interface_set_track_uri ((RygelPlayerControllerInterface*) self, g_value_get_string (value));
 		break;
diff --git a/src/librygel-renderer/rygel-player-controller.vala b/src/librygel-renderer/rygel-player-controller.vala
index 30dd9b5..18d828e 100644
--- a/src/librygel-renderer/rygel-player-controller.vala
+++ b/src/librygel-renderer/rygel-player-controller.vala
@@ -236,6 +236,8 @@ public class Rygel.PlayerController : Object, PlayerControllerInterface {
     public string uri { get; private set; default = ""; }
     public string metadata { get; private set; default = ""; }
 
+    public string play_mode { get; set; default = "NORMAL"; }
+
     [CCode (notify = false)]
     public string track_uri {
         owned get {
@@ -484,8 +486,6 @@ public class Rygel.PlayerController : Object, PlayerControllerInterface {
     public void calc_max_tracks ()
     {
     }
-    public void set_play_mode (string new_play_mode) {
-    }
 
     public void set_single_play_uri (string uri,
                                      string metadata,
diff --git a/src/librygel-renderer/rygel-qplay.c b/src/librygel-renderer/rygel-qplay.c
index 2c82272..31f9932 100644
--- a/src/librygel-renderer/rygel-qplay.c
+++ b/src/librygel-renderer/rygel-qplay.c
@@ -90,7 +90,6 @@ struct _RygelPlayerControllerInterfaceIface {
 	void (*set_tracks_info) (RygelPlayerControllerInterface* self, const gchar* queue_id, const gchar* starting_index, const gchar* next_index, const gchar* tracks_meta_data);
 	void (*calc_tracks_count) (RygelPlayerControllerInterface* self);
 	void (*calc_max_tracks) (RygelPlayerControllerInterface* self);
-	void (*set_play_mode) (RygelPlayerControllerInterface* self, const gchar* new_play_mode);
 	const gchar* (*get_playback_state) (RygelPlayerControllerInterface* self);
 	void (*set_playback_state) (RygelPlayerControllerInterface* self, const gchar* value);
 	guint (*get_n_tracks) (RygelPlayerControllerInterface* self);
@@ -138,6 +137,8 @@ struct _RygelPlayerControllerInterfaceIface {
 	void (*set_tracks_count) (RygelPlayerControllerInterface* self, const gchar* value);
 	const gchar* (*get_max_tracks) (RygelPlayerControllerInterface* self);
 	void (*set_max_tracks) (RygelPlayerControllerInterface* self, const gchar* value);
+	const gchar* (*get_play_mode) (RygelPlayerControllerInterface* self);
+	void (*set_play_mode) (RygelPlayerControllerInterface* self, const gchar* value);
 	gint64 (*get_media_duration) (RygelPlayerControllerInterface* self);
 };
 
diff --git a/src/librygel-renderer/rygel-renderer.h b/src/librygel-renderer/rygel-renderer.h
index 0d4b109..ae412fb 100644
--- a/src/librygel-renderer/rygel-renderer.h
+++ b/src/librygel-renderer/rygel-renderer.h
@@ -122,7 +122,6 @@ struct _RygelPlayerControllerInterfaceIface {
 	void (*set_tracks_info) (RygelPlayerControllerInterface* self, const gchar* queue_id, const gchar* starting_index, const gchar* next_index, const gchar* tracks_meta_data);
 	void (*calc_tracks_count) (RygelPlayerControllerInterface* self);
 	void (*calc_max_tracks) (RygelPlayerControllerInterface* self);
-	void (*set_play_mode) (RygelPlayerControllerInterface* self, const gchar* new_play_mode);
 	const gchar* (*get_playback_state) (RygelPlayerControllerInterface* self);
 	void (*set_playback_state) (RygelPlayerControllerInterface* self, const gchar* value);
 	guint (*get_n_tracks) (RygelPlayerControllerInterface* self);
@@ -170,6 +169,8 @@ struct _RygelPlayerControllerInterfaceIface {
 	void (*set_tracks_count) (RygelPlayerControllerInterface* self, const gchar* value);
 	const gchar* (*get_max_tracks) (RygelPlayerControllerInterface* self);
 	void (*set_max_tracks) (RygelPlayerControllerInterface* self, const gchar* value);
+	const gchar* (*get_play_mode) (RygelPlayerControllerInterface* self);
+	void (*set_play_mode) (RygelPlayerControllerInterface* self, const gchar* value);
 	gint64 (*get_media_duration) (RygelPlayerControllerInterface* self);
 };
 
@@ -249,7 +250,6 @@ void rygel_player_controller_interface_get_tracks_info (RygelPlayerControllerInt
 void rygel_player_controller_interface_set_tracks_info (RygelPlayerControllerInterface* self, const gchar* queue_id, const gchar* starting_index, const gchar* next_index, const gchar* tracks_meta_data);
 void rygel_player_controller_interface_calc_tracks_count (RygelPlayerControllerInterface* self);
 void rygel_player_controller_interface_calc_max_tracks (RygelPlayerControllerInterface* self);
-void rygel_player_controller_interface_set_play_mode (RygelPlayerControllerInterface* self, const gchar* new_play_mode);
 const gchar* rygel_player_controller_interface_get_playback_state (RygelPlayerControllerInterface* self);
 void rygel_player_controller_interface_set_playback_state (RygelPlayerControllerInterface* self, const gchar* value);
 guint rygel_player_controller_interface_get_n_tracks (RygelPlayerControllerInterface* self);
@@ -297,6 +297,8 @@ const gchar* rygel_player_controller_interface_get_tracks_count (RygelPlayerCont
 void rygel_player_controller_interface_set_tracks_count (RygelPlayerControllerInterface* self, const gchar* value);
 const gchar* rygel_player_controller_interface_get_max_tracks (RygelPlayerControllerInterface* self);
 void rygel_player_controller_interface_set_max_tracks (RygelPlayerControllerInterface* self, const gchar* value);
+const gchar* rygel_player_controller_interface_get_play_mode (RygelPlayerControllerInterface* self);
+void rygel_player_controller_interface_set_play_mode (RygelPlayerControllerInterface* self, const gchar* value);
 gint64 rygel_player_controller_interface_get_media_duration (RygelPlayerControllerInterface* self);
 gchar* rygel_player_controller_interface_get_media_duration_as_str (RygelPlayerControllerInterface* self);
 GType rygel_media_renderer_get_type (void) G_GNUC_CONST;
-- 
1.9.1

