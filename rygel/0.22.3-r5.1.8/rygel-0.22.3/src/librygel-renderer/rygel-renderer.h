/* rygel-renderer.h generated by valac 0.24.0, the Vala compiler, do not modify */


#ifndef __RYGEL_RENDERER_H__
#define __RYGEL_RENDERER_H__

#include <glib.h>
#include <rygel-core.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <float.h>
#include <math.h>
#include <libgupnp-av/gupnp-av.h>

G_BEGIN_DECLS


#define RYGEL_TYPE_MEDIA_RENDERER_PLUGIN (rygel_media_renderer_plugin_get_type ())
#define RYGEL_MEDIA_RENDERER_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), RYGEL_TYPE_MEDIA_RENDERER_PLUGIN, RygelMediaRendererPlugin))
#define RYGEL_MEDIA_RENDERER_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), RYGEL_TYPE_MEDIA_RENDERER_PLUGIN, RygelMediaRendererPluginClass))
#define RYGEL_IS_MEDIA_RENDERER_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), RYGEL_TYPE_MEDIA_RENDERER_PLUGIN))
#define RYGEL_IS_MEDIA_RENDERER_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), RYGEL_TYPE_MEDIA_RENDERER_PLUGIN))
#define RYGEL_MEDIA_RENDERER_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), RYGEL_TYPE_MEDIA_RENDERER_PLUGIN, RygelMediaRendererPluginClass))

typedef struct _RygelMediaRendererPlugin RygelMediaRendererPlugin;
typedef struct _RygelMediaRendererPluginClass RygelMediaRendererPluginClass;
typedef struct _RygelMediaRendererPluginPrivate RygelMediaRendererPluginPrivate;

#define RYGEL_TYPE_MEDIA_PLAYER (rygel_media_player_get_type ())
#define RYGEL_MEDIA_PLAYER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), RYGEL_TYPE_MEDIA_PLAYER, RygelMediaPlayer))
#define RYGEL_IS_MEDIA_PLAYER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), RYGEL_TYPE_MEDIA_PLAYER))
#define RYGEL_MEDIA_PLAYER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), RYGEL_TYPE_MEDIA_PLAYER, RygelMediaPlayerIface))

typedef struct _RygelMediaPlayer RygelMediaPlayer;
typedef struct _RygelMediaPlayerIface RygelMediaPlayerIface;

#define RYGEL_TYPE_PLAYER_CONTROLLER_INTERFACE (rygel_player_controller_interface_get_type ())
#define RYGEL_PLAYER_CONTROLLER_INTERFACE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), RYGEL_TYPE_PLAYER_CONTROLLER_INTERFACE, RygelPlayerControllerInterface))
#define RYGEL_IS_PLAYER_CONTROLLER_INTERFACE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), RYGEL_TYPE_PLAYER_CONTROLLER_INTERFACE))
#define RYGEL_PLAYER_CONTROLLER_INTERFACE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), RYGEL_TYPE_PLAYER_CONTROLLER_INTERFACE, RygelPlayerControllerInterfaceIface))

typedef struct _RygelPlayerControllerInterface RygelPlayerControllerInterface;
typedef struct _RygelPlayerControllerInterfaceIface RygelPlayerControllerInterfaceIface;

#define RYGEL_TYPE_PLAYER_CONTROLLER (rygel_player_controller_get_type ())
#define RYGEL_PLAYER_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), RYGEL_TYPE_PLAYER_CONTROLLER, RygelPlayerController))
#define RYGEL_PLAYER_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), RYGEL_TYPE_PLAYER_CONTROLLER, RygelPlayerControllerClass))
#define RYGEL_IS_PLAYER_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), RYGEL_TYPE_PLAYER_CONTROLLER))
#define RYGEL_IS_PLAYER_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), RYGEL_TYPE_PLAYER_CONTROLLER))
#define RYGEL_PLAYER_CONTROLLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), RYGEL_TYPE_PLAYER_CONTROLLER, RygelPlayerControllerClass))

typedef struct _RygelPlayerController RygelPlayerController;
typedef struct _RygelPlayerControllerClass RygelPlayerControllerClass;
typedef struct _RygelPlayerControllerPrivate RygelPlayerControllerPrivate;

#define RYGEL_TYPE_MEDIA_RENDERER (rygel_media_renderer_get_type ())
#define RYGEL_MEDIA_RENDERER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), RYGEL_TYPE_MEDIA_RENDERER, RygelMediaRenderer))
#define RYGEL_MEDIA_RENDERER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), RYGEL_TYPE_MEDIA_RENDERER, RygelMediaRendererClass))
#define RYGEL_IS_MEDIA_RENDERER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), RYGEL_TYPE_MEDIA_RENDERER))
#define RYGEL_IS_MEDIA_RENDERER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), RYGEL_TYPE_MEDIA_RENDERER))
#define RYGEL_MEDIA_RENDERER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), RYGEL_TYPE_MEDIA_RENDERER, RygelMediaRendererClass))

typedef struct _RygelMediaRenderer RygelMediaRenderer;
typedef struct _RygelMediaRendererClass RygelMediaRendererClass;
typedef struct _RygelMediaRendererPrivate RygelMediaRendererPrivate;

struct _RygelMediaPlayerIface {
	GTypeInterface parent_iface;
	gboolean (*seek) (RygelMediaPlayer* self, gint64 time);
	gboolean (*seek_bytes) (RygelMediaPlayer* self, gint64 bytes);
	gchar** (*get_protocols) (RygelMediaPlayer* self, int* result_length1);
	gchar** (*get_mime_types) (RygelMediaPlayer* self, int* result_length1);
	gchar* (*get_playback_state) (RygelMediaPlayer* self);
	void (*set_playback_state) (RygelMediaPlayer* self, const gchar* value);
	gchar** (*get_allowed_playback_speeds) (RygelMediaPlayer* self, int* result_length1);
	gchar* (*get_playback_speed) (RygelMediaPlayer* self);
	void (*set_playback_speed) (RygelMediaPlayer* self, const gchar* value);
	gchar* (*get_uri) (RygelMediaPlayer* self);
	void (*set_uri) (RygelMediaPlayer* self, const gchar* value);
	gdouble (*get_volume) (RygelMediaPlayer* self);
	void (*set_volume) (RygelMediaPlayer* self, gdouble value);
	gint64 (*get_duration) (RygelMediaPlayer* self);
	gint64 (*get_size) (RygelMediaPlayer* self);
	gchar* (*get_metadata) (RygelMediaPlayer* self);
	void (*set_metadata) (RygelMediaPlayer* self, const gchar* value);
	gchar* (*get_mime_type) (RygelMediaPlayer* self);
	void (*set_mime_type) (RygelMediaPlayer* self, const gchar* value);
	gboolean (*get_can_seek) (RygelMediaPlayer* self);
	gboolean (*get_can_pause) (RygelMediaPlayer* self);
	gboolean (*get_can_seek_bytes) (RygelMediaPlayer* self);
	gchar* (*get_content_features) (RygelMediaPlayer* self);
	void (*set_content_features) (RygelMediaPlayer* self, const gchar* value);
	gint64 (*get_position) (RygelMediaPlayer* self);
	gint64 (*get_byte_position) (RygelMediaPlayer* self);
};

struct _RygelMediaRendererPlugin {
	RygelPlugin parent_instance;
	RygelMediaRendererPluginPrivate * priv;
};

struct _RygelMediaRendererPluginClass {
	RygelPluginClass parent_class;
	RygelMediaPlayer* (*get_player) (RygelMediaRendererPlugin* self);
};

struct _RygelPlayerControllerInterfaceIface {
	GTypeInterface parent_iface;
	void (*set_network) (RygelPlayerControllerInterface* self, const gchar* ssid, const gchar* key);
	gboolean (*next) (RygelPlayerControllerInterface* self);
	gboolean (*previous) (RygelPlayerControllerInterface* self);
	void (*calc_auth_code) (RygelPlayerControllerInterface* self, const gchar* seed);
	void (*set_single_play_uri) (RygelPlayerControllerInterface* self, const gchar* uri, const gchar* metadata, const gchar* mime, const gchar* features);
	void (*set_playlist_uri) (RygelPlayerControllerInterface* self, const gchar* uri, const gchar* metadata, GUPnPMediaCollection* collection);
	void (*set_next_single_play_uri) (RygelPlayerControllerInterface* self, const gchar* uri, const gchar* metadata, const gchar* mime, const gchar* features);
	void (*set_next_playlist_uri) (RygelPlayerControllerInterface* self, const gchar* uri, const gchar* metadata, GUPnPMediaCollection* collection);
	void (*set_qplay_queue_uri) (RygelPlayerControllerInterface* self, const gchar* uri, const gchar* metadata, const gchar* mime, const gchar* features);
	gint (*insert_tracks) (RygelPlayerControllerInterface* self, const gchar* queue_id, const gchar* starting_index, const gchar* tracks_meta_data);
	gint (*remove_tracks) (RygelPlayerControllerInterface* self, const gchar* queue_id, const gchar* starting_index, const gchar* number_of_tracks);
	void (*get_tracks_info) (RygelPlayerControllerInterface* self, const gchar* starting_index, const gchar* number_of_tracks);
	gint (*set_tracks_info) (RygelPlayerControllerInterface* self, const gchar* queue_id, const gchar* starting_index, const gchar* next_index, const gchar* tracks_meta_data);
	void (*calc_tracks_count) (RygelPlayerControllerInterface* self);
	void (*calc_max_tracks) (RygelPlayerControllerInterface* self);
	const gchar* (*get_playback_state) (RygelPlayerControllerInterface* self);
	void (*set_playback_state) (RygelPlayerControllerInterface* self, const gchar* value);
	guint (*get_n_tracks) (RygelPlayerControllerInterface* self);
	void (*set_n_tracks) (RygelPlayerControllerInterface* self, guint value);
	guint (*get_track) (RygelPlayerControllerInterface* self);
	void (*set_track) (RygelPlayerControllerInterface* self, guint value);
	const gchar* (*get_uri) (RygelPlayerControllerInterface* self);
	void (*set_uri) (RygelPlayerControllerInterface* self, const gchar* value);
	const gchar* (*get_metadata) (RygelPlayerControllerInterface* self);
	void (*set_metadata) (RygelPlayerControllerInterface* self, const gchar* value);
	gchar* (*get_track_uri) (RygelPlayerControllerInterface* self);
	void (*set_track_uri) (RygelPlayerControllerInterface* self, const gchar* value);
	gchar* (*get_track_metadata) (RygelPlayerControllerInterface* self);
	void (*set_track_metadata) (RygelPlayerControllerInterface* self, const gchar* value);
	const gchar* (*get_next_uri) (RygelPlayerControllerInterface* self);
	void (*set_next_uri) (RygelPlayerControllerInterface* self, const gchar* value);
	const gchar* (*get_next_metadata) (RygelPlayerControllerInterface* self);
	void (*set_next_metadata) (RygelPlayerControllerInterface* self, const gchar* value);
	gchar* (*get_current_transport_actions) (RygelPlayerControllerInterface* self);
	const gchar* (*get_manufacture_id) (RygelPlayerControllerInterface* self);
	void (*set_manufacture_id) (RygelPlayerControllerInterface* self, const gchar* value);
	const gchar* (*get_device_id) (RygelPlayerControllerInterface* self);
	void (*set_device_id) (RygelPlayerControllerInterface* self, const gchar* value);
	const gchar* (*get_auth_seed) (RygelPlayerControllerInterface* self);
	void (*set_auth_seed) (RygelPlayerControllerInterface* self, const gchar* value);
	const gchar* (*get_auth_code) (RygelPlayerControllerInterface* self);
	void (*set_auth_code) (RygelPlayerControllerInterface* self, const gchar* value);
	const gchar* (*get_network_ssid) (RygelPlayerControllerInterface* self);
	void (*set_network_ssid) (RygelPlayerControllerInterface* self, const gchar* value);
	const gchar* (*get_network_key) (RygelPlayerControllerInterface* self);
	void (*set_network_key) (RygelPlayerControllerInterface* self, const gchar* value);
	const gchar* (*get_queue_id) (RygelPlayerControllerInterface* self);
	void (*set_queue_id) (RygelPlayerControllerInterface* self, const gchar* value);
	const gchar* (*get_starting_index) (RygelPlayerControllerInterface* self);
	void (*set_starting_index) (RygelPlayerControllerInterface* self, const gchar* value);
	const gchar* (*get_tracks_meta_data) (RygelPlayerControllerInterface* self);
	void (*set_tracks_meta_data) (RygelPlayerControllerInterface* self, const gchar* value);
	const gchar* (*get_next_index) (RygelPlayerControllerInterface* self);
	void (*set_next_index) (RygelPlayerControllerInterface* self, const gchar* value);
	const gchar* (*get_tracks_count) (RygelPlayerControllerInterface* self);
	void (*set_tracks_count) (RygelPlayerControllerInterface* self, const gchar* value);
	const gchar* (*get_max_tracks) (RygelPlayerControllerInterface* self);
	void (*set_max_tracks) (RygelPlayerControllerInterface* self, const gchar* value);
	const gchar* (*get_play_mode) (RygelPlayerControllerInterface* self);
	void (*set_play_mode) (RygelPlayerControllerInterface* self, const gchar* value);
	gint64 (*get_media_duration) (RygelPlayerControllerInterface* self);
};

struct _RygelPlayerController {
	GObject parent_instance;
	RygelPlayerControllerPrivate * priv;
};

struct _RygelPlayerControllerClass {
	GObjectClass parent_class;
};

struct _RygelMediaRenderer {
	RygelMediaDevice parent_instance;
	RygelMediaRendererPrivate * priv;
};

struct _RygelMediaRendererClass {
	RygelMediaDeviceClass parent_class;
};


GType rygel_media_renderer_plugin_get_type (void) G_GNUC_CONST;
GType rygel_media_player_get_type (void) G_GNUC_CONST;
GType rygel_player_controller_interface_get_type (void) G_GNUC_CONST;
RygelMediaRendererPlugin* rygel_media_renderer_plugin_new (const gchar* name, const gchar* title, const gchar* description, RygelPluginCapabilities capabilities, RygelPlayerControllerInterface* controller);
RygelMediaRendererPlugin* rygel_media_renderer_plugin_construct (GType object_type, const gchar* name, const gchar* title, const gchar* description, RygelPluginCapabilities capabilities, RygelPlayerControllerInterface* controller);
RygelMediaPlayer* rygel_media_renderer_plugin_get_player (RygelMediaRendererPlugin* self);
gchar* rygel_media_renderer_plugin_get_protocol_info (RygelMediaRendererPlugin* self);
GList* rygel_media_renderer_plugin_get_supported_profiles (RygelMediaRendererPlugin* self);
void rygel_media_renderer_plugin_set_supported_profiles (RygelMediaRendererPlugin* self, GList* value);
gboolean rygel_media_player_seek (RygelMediaPlayer* self, gint64 time);
gboolean rygel_media_player_seek_bytes (RygelMediaPlayer* self, gint64 bytes);
gchar** rygel_media_player_get_protocols (RygelMediaPlayer* self, int* result_length1);
gchar** rygel_media_player_get_mime_types (RygelMediaPlayer* self, int* result_length1);
gdouble rygel_media_player_play_speed_to_double (RygelMediaPlayer* self, const gchar* speed);
gchar* rygel_media_player_get_playback_state (RygelMediaPlayer* self);
void rygel_media_player_set_playback_state (RygelMediaPlayer* self, const gchar* value);
gchar** rygel_media_player_get_allowed_playback_speeds (RygelMediaPlayer* self, int* result_length1);
gchar* rygel_media_player_get_playback_speed (RygelMediaPlayer* self);
void rygel_media_player_set_playback_speed (RygelMediaPlayer* self, const gchar* value);
gchar* rygel_media_player_get_uri (RygelMediaPlayer* self);
void rygel_media_player_set_uri (RygelMediaPlayer* self, const gchar* value);
gdouble rygel_media_player_get_volume (RygelMediaPlayer* self);
void rygel_media_player_set_volume (RygelMediaPlayer* self, gdouble value);
gint64 rygel_media_player_get_duration (RygelMediaPlayer* self);
gint64 rygel_media_player_get_size (RygelMediaPlayer* self);
gchar* rygel_media_player_get_metadata (RygelMediaPlayer* self);
void rygel_media_player_set_metadata (RygelMediaPlayer* self, const gchar* value);
gchar* rygel_media_player_get_mime_type (RygelMediaPlayer* self);
void rygel_media_player_set_mime_type (RygelMediaPlayer* self, const gchar* value);
gboolean rygel_media_player_get_can_seek (RygelMediaPlayer* self);
gboolean rygel_media_player_get_can_pause (RygelMediaPlayer* self);
gboolean rygel_media_player_get_can_seek_bytes (RygelMediaPlayer* self);
gchar* rygel_media_player_get_content_features (RygelMediaPlayer* self);
void rygel_media_player_set_content_features (RygelMediaPlayer* self, const gchar* value);
gchar* rygel_media_player_get_duration_as_str (RygelMediaPlayer* self);
gint64 rygel_media_player_get_position (RygelMediaPlayer* self);
gint64 rygel_media_player_get_byte_position (RygelMediaPlayer* self);
gchar* rygel_media_player_get_position_as_str (RygelMediaPlayer* self);
gchar* rygel_media_player_get_protocol_info (RygelMediaPlayer* self);
GType rygel_player_controller_get_type (void) G_GNUC_CONST;
RygelPlayerController* rygel_player_controller_new (RygelMediaPlayer* player, const gchar* protocol_info);
RygelPlayerController* rygel_player_controller_construct (GType object_type, RygelMediaPlayer* player, const gchar* protocol_info);
void rygel_player_controller_interface_set_network (RygelPlayerControllerInterface* self, const gchar* ssid, const gchar* key);
gboolean rygel_player_controller_interface_next (RygelPlayerControllerInterface* self);
gboolean rygel_player_controller_interface_previous (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_calc_auth_code (RygelPlayerControllerInterface* self, const gchar* seed);
void rygel_player_controller_interface_set_single_play_uri (RygelPlayerControllerInterface* self, const gchar* uri, const gchar* metadata, const gchar* mime, const gchar* features);
void rygel_player_controller_interface_set_playlist_uri (RygelPlayerControllerInterface* self, const gchar* uri, const gchar* metadata, GUPnPMediaCollection* collection);
void rygel_player_controller_interface_set_next_single_play_uri (RygelPlayerControllerInterface* self, const gchar* uri, const gchar* metadata, const gchar* mime, const gchar* features);
void rygel_player_controller_interface_set_next_playlist_uri (RygelPlayerControllerInterface* self, const gchar* uri, const gchar* metadata, GUPnPMediaCollection* collection);
void rygel_player_controller_interface_set_qplay_queue_uri (RygelPlayerControllerInterface* self, const gchar* uri, const gchar* metadata, const gchar* mime, const gchar* features);
gint rygel_player_controller_interface_insert_tracks (RygelPlayerControllerInterface* self, const gchar* queue_id, const gchar* starting_index, const gchar* tracks_meta_data);
gint rygel_player_controller_interface_remove_tracks (RygelPlayerControllerInterface* self, const gchar* queue_id, const gchar* starting_index, const gchar* number_of_tracks);
void rygel_player_controller_interface_get_tracks_info (RygelPlayerControllerInterface* self, const gchar* starting_index, const gchar* number_of_tracks);
gint rygel_player_controller_interface_set_tracks_info (RygelPlayerControllerInterface* self, const gchar* queue_id, const gchar* starting_index, const gchar* next_index, const gchar* tracks_meta_data);
void rygel_player_controller_interface_calc_tracks_count (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_calc_max_tracks (RygelPlayerControllerInterface* self);
const gchar* rygel_player_controller_interface_get_playback_state (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_playback_state (RygelPlayerControllerInterface* self, const gchar* value);
guint rygel_player_controller_interface_get_n_tracks (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_n_tracks (RygelPlayerControllerInterface* self, guint value);
guint rygel_player_controller_interface_get_track (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_track (RygelPlayerControllerInterface* self, guint value);
const gchar* rygel_player_controller_interface_get_uri (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_uri (RygelPlayerControllerInterface* self, const gchar* value);
const gchar* rygel_player_controller_interface_get_metadata (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_metadata (RygelPlayerControllerInterface* self, const gchar* value);
gchar* rygel_player_controller_interface_get_track_uri (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_track_uri (RygelPlayerControllerInterface* self, const gchar* value);
gchar* rygel_player_controller_interface_get_track_metadata (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_track_metadata (RygelPlayerControllerInterface* self, const gchar* value);
const gchar* rygel_player_controller_interface_get_next_uri (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_next_uri (RygelPlayerControllerInterface* self, const gchar* value);
const gchar* rygel_player_controller_interface_get_next_metadata (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_next_metadata (RygelPlayerControllerInterface* self, const gchar* value);
gchar* rygel_player_controller_interface_get_current_transport_actions (RygelPlayerControllerInterface* self);
const gchar* rygel_player_controller_interface_get_manufacture_id (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_manufacture_id (RygelPlayerControllerInterface* self, const gchar* value);
const gchar* rygel_player_controller_interface_get_device_id (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_device_id (RygelPlayerControllerInterface* self, const gchar* value);
const gchar* rygel_player_controller_interface_get_auth_seed (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_auth_seed (RygelPlayerControllerInterface* self, const gchar* value);
const gchar* rygel_player_controller_interface_get_auth_code (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_auth_code (RygelPlayerControllerInterface* self, const gchar* value);
const gchar* rygel_player_controller_interface_get_network_ssid (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_network_ssid (RygelPlayerControllerInterface* self, const gchar* value);
const gchar* rygel_player_controller_interface_get_network_key (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_network_key (RygelPlayerControllerInterface* self, const gchar* value);
const gchar* rygel_player_controller_interface_get_queue_id (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_queue_id (RygelPlayerControllerInterface* self, const gchar* value);
const gchar* rygel_player_controller_interface_get_starting_index (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_starting_index (RygelPlayerControllerInterface* self, const gchar* value);
const gchar* rygel_player_controller_interface_get_tracks_meta_data (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_tracks_meta_data (RygelPlayerControllerInterface* self, const gchar* value);
const gchar* rygel_player_controller_interface_get_next_index (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_next_index (RygelPlayerControllerInterface* self, const gchar* value);
const gchar* rygel_player_controller_interface_get_tracks_count (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_tracks_count (RygelPlayerControllerInterface* self, const gchar* value);
const gchar* rygel_player_controller_interface_get_max_tracks (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_max_tracks (RygelPlayerControllerInterface* self, const gchar* value);
const gchar* rygel_player_controller_interface_get_play_mode (RygelPlayerControllerInterface* self);
void rygel_player_controller_interface_set_play_mode (RygelPlayerControllerInterface* self, const gchar* value);
gint64 rygel_player_controller_interface_get_media_duration (RygelPlayerControllerInterface* self);
gchar* rygel_player_controller_interface_get_media_duration_as_str (RygelPlayerControllerInterface* self);
GType rygel_media_renderer_get_type (void) G_GNUC_CONST;
RygelMediaRenderer* rygel_media_renderer_new (const gchar* title, const gchar* model_name, const gchar* model_number, RygelMediaPlayer* player, RygelPluginCapabilities capabilities, RygelPlayerControllerInterface* controller);
RygelMediaRenderer* rygel_media_renderer_construct (GType object_type, const gchar* title, const gchar* model_name, const gchar* model_number, RygelMediaPlayer* player, RygelPluginCapabilities capabilities, RygelPlayerControllerInterface* controller);


G_END_DECLS

#endif
