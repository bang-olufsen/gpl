From e631771873c60fe4ef7c3d73925bec8450130530 Mon Sep 17 00:00:00 2001
From: Simon Mikuda <simon.mikuda@streamunlimited.com>
Date: Wed, 29 Aug 2018 10:37:26 +0200
Subject: [PATCH] Fix opening pcm while device is busy

We will still open pcm in "off" state, while trying to open it on
snd_pcm_switch_avail_update.

Signed-off-by: Simon Mikuda <simon.mikuda@streamunlimited.com>

%% original patch: 0019-Fix-opening-pcm-while-device-is-busy.patch
---
 src/pcm/pcm_switch.c | 17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/src/pcm/pcm_switch.c b/src/pcm/pcm_switch.c
index ce652c8..818a00b 100644
--- a/src/pcm/pcm_switch.c
+++ b/src/pcm/pcm_switch.c
@@ -143,6 +143,7 @@ static void check_switch_value(snd_pcm_t *pcm)
 {
 	snd_pcm_switch_t *swtch = pcm->private_data;
 
+	TRACE("needs_update=%d", swtch->needs_update);
 	if (swtch->needs_update) {
 		apply_switch_value(pcm);
 	}
@@ -858,14 +859,14 @@ static int snd_pcm_switch_resume(snd_pcm_t *pcm)
 
 static void apply_switch_value(snd_pcm_t *pcm)
 {
-	TRACE("");
-
 	snd_pcm_switch_t *swtch = pcm->private_data;
 	snd_pcm_t *slave;
 	snd_pcm_state_t pcm_state;
 	snd_pcm_uframes_t avail_playback, waiting_playback;
 	int err;
 
+	TRACE("swtch->cur_switch=%d swtch->active_switch=%d swtch->gen.slave=%p", swtch->cur_switch, swtch->active_switch, swtch->gen.slave);
+
 	swtch->needs_update = 0;
 
 	// sanity checks
@@ -1747,6 +1748,7 @@ int _snd_pcm_switch_open(snd_pcm_t **pcmp, const char *name,
 	swtch->stream_mode = mode;
 	swtch->active_switch = swtch->cur_switch;
 	swtch->gen.close_slave = 1;
+	swtch->gen.slave = NULL;
 	swtch->drift_mult = drift_mult;
 
 	/* Store hw configuration to handle use cases when we are opening
@@ -1757,10 +1759,13 @@ int _snd_pcm_switch_open(snd_pcm_t **pcmp, const char *name,
 	if (swtch->cur_switch == SWITCH_CTL_ON) {
 		/* open slave if switch is enabled */
 		err = snd_pcm_open_slave(&spcm, root, sconf, stream, mode, conf);
-		if (err < 0)
+		if (err == -EBUSY) {
+			swtch->needs_update = 1;
+			swtch->active_switch = SWITCH_CTL_OFF;
+		} else if (err < 0)
 			goto failed_open;
-
-		swtch->gen.slave = spcm;
+		else
+			swtch->gen.slave = spcm;
 
 		/* save hw_params to file */
 		FILE * pFile;
@@ -1780,8 +1785,6 @@ int _snd_pcm_switch_open(snd_pcm_t **pcmp, const char *name,
 		}
 
 	} else {
-		swtch->gen.slave = NULL;
-
 		/* read hw_params from file */
 		FILE * pFile;
 		pFile = fopen (hw_params_path, "r");
-- 
2.7.4

