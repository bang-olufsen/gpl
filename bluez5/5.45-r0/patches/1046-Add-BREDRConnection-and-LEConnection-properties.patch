From d7879a68b9f1452e5d8c4f68cffd91130a630b04 Mon Sep 17 00:00:00 2001
From: Simon Mikuda <simon.mikuda@streamunlimited.com>
Date: Tue, 6 Nov 2018 09:04:35 +0100
Subject: [PATCH] Add "BREDRConnection" and "LEConnection" properties

Signed-off-by: Simon Mikuda <simon.mikuda@streamunlimited.com>
---
 doc/device-api.txt | 12 ++++++++++++
 src/device.c       | 48 ++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 60 insertions(+)

diff --git a/doc/device-api.txt b/doc/device-api.txt
index 13b2881..5f44664 100644
--- a/doc/device-api.txt
+++ b/doc/device-api.txt
@@ -160,6 +160,18 @@ Properties	string Address [readonly]
 			A PropertiesChanged signal indicate changes to this
 			status.
 
+		boolean BREDRConnection [readonly]
+
+			Indicates if the remote device is currently connected
+			to BREDR connection. A PropertiesChanged signal indicate
+			changes to this status.
+
+		boolean LEConnection [readonly]
+
+			Indicates if the remote device is currently connected
+			to LE connection. A PropertiesChanged signal indicate
+			changes to this status.
+
 		boolean Trusted [readwrite]
 
 			Indicates if the remote is seen as trusted. This
diff --git a/src/device.c b/src/device.c
index 34d9625..837742d 100644
--- a/src/device.c
+++ b/src/device.c
@@ -1129,6 +1129,38 @@ static gboolean dev_property_get_connected(const GDBusPropertyTable *property,
 	return TRUE;
 }
 
+static gboolean dev_property_get_bredr_connection(const GDBusPropertyTable *property,
+					DBusMessageIter *iter, void *data)
+{
+	struct btd_device *dev = data;
+	dbus_bool_t connected;
+
+	if (dev->bredr_state.connected)
+		connected = TRUE;
+	else
+		connected = FALSE;
+
+	dbus_message_iter_append_basic(iter, DBUS_TYPE_BOOLEAN, &connected);
+
+	return TRUE;
+}
+
+static gboolean dev_property_get_le_connection(const GDBusPropertyTable *property,
+					DBusMessageIter *iter, void *data)
+{
+	struct btd_device *dev = data;
+	dbus_bool_t connected;
+
+	if (dev->le_state.connected)
+		connected = TRUE;
+	else
+		connected = FALSE;
+
+	dbus_message_iter_append_basic(iter, DBUS_TYPE_BOOLEAN, &connected);
+
+	return TRUE;
+}
+
 static gboolean dev_property_get_uuids(const GDBusPropertyTable *property,
 					DBusMessageIter *iter, void *data)
 {
@@ -2683,6 +2715,8 @@ static const GDBusPropertyTable device_properties[] = {
 	{ "LegacyPairing", "b", dev_property_get_legacy },
 	{ "RSSI", "n", dev_property_get_rssi, NULL, dev_property_exists_rssi },
 	{ "Connected", "b", dev_property_get_connected },
+	{ "BREDRConnection", "b", dev_property_get_bredr_connection },
+	{ "LEConnection", "b", dev_property_get_le_connection },
 	{ "UUIDs", "as", dev_property_get_uuids },
 	{ "Modalias", "s", dev_property_get_modalias, NULL,
 						dev_property_exists_modalias },
@@ -2739,6 +2773,13 @@ void device_add_connection(struct btd_device *dev, uint8_t bdaddr_type)
 	dev->last_used = time(NULL);
 	store_device_info(dev);
 
+	if (bdaddr_type == BDADDR_BREDR)
+		g_dbus_emit_property_changed(dbus_conn, dev->path, DEVICE_INTERFACE,
+									"BREDRConnection");
+	else
+		g_dbus_emit_property_changed(dbus_conn, dev->path, DEVICE_INTERFACE,
+									"LEConnection");
+
 	if (dev->le_state.connected && dev->bredr_state.connected)
 		return;
 
@@ -2775,6 +2816,13 @@ void device_remove_connection(struct btd_device *device, uint8_t bdaddr_type)
 		btd_adapter_remove_bonding(device->adapter, &device->bdaddr,
 								bdaddr_type);
 
+	if (bdaddr_type == BDADDR_BREDR)
+		g_dbus_emit_property_changed(dbus_conn, device->path, DEVICE_INTERFACE,
+									"BREDRConnection");
+	else
+		g_dbus_emit_property_changed(dbus_conn, device->path, DEVICE_INTERFACE,
+									"LEConnection");
+
 	if (device->bredr_state.connected || device->le_state.connected)
 		return;
 
-- 
2.7.4

